import { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';
import { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class UICheckboxComponent {
    constructor() {
        this.outputChecked = new EventEmitter();
        this.tabIndex = 0;
        this.onTouch = () => { };
    }
    set isChecked(value) {
        this.isCheckated = value;
    }
    ;
    writeValue(checked) {
        this.isChecked = checked;
    }
    registerOnChange(fn) {
        this.onChangeCallback = fn;
    }
    registerOnTouched(fn) {
        this.onTouch = fn;
    }
    setDisabledState(isDisabled) {
        this.isDisabled = isDisabled;
    }
    modelChangeFn(checked) {
        this.onChangeCallback?.(checked);
        this.outputChecked.emit(checked);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: UICheckboxComponent, isStandalone: true, selector: "ui-checkbox", inputs: { id: "id", name: "name", label: "label", ariaLabel: "ariaLabel", isChecked: "isChecked", isDisabled: "isDisabled" }, outputs: { outputChecked: "outputChecked" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => UICheckboxComponent),
                multi: true
            }
        ], ngImport: i0, template: "<div class=\"ui-checkbox\">\n    <input \n        [id]=\"id\" \n        class=\"ui-checkbox-input\" \n        type=\"checkbox\" \n        role=\"checkbox\"\n        [attr.aria-disabled]=\"isDisabled\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.aria-checked]=\"isCheckated\"\n        [checked]=\"isCheckated\" \n        [disabled]=\"isDisabled\"\n        [tabIndex]=\"isDisabled ? -1 : tabIndex\"\n        [(ngModel)]=\"isCheckated\"\n        (ngModelChange)=\"modelChangeFn($event)\"\n    />\n    <label \n        class=\"ui-checkbox-label\" \n        [class.ui-checkbox-label--not-text]=\"!label\" \n        [for]=\"id\">\n        <svg viewBox=\"0 0 100 100\">\n            <path fill=\"none\" stroke=\"#000\" stroke-width=\"13\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                stroke-miterlimit=\"10\" d=\"M12.1 52.1l24.4 24.4 53-53\" />\n        </svg>\n        {{ label }}\n    </label>\n</div>", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}:root{--ui-checkbox-border-default: var(--ui-custom-checkbox-border-default, var(--grayscale-spacer));--ui-checkbox-border-checked: var(--ui-custom-checkbox-border-checked, var(--corporate-purple));--ui-checkbox-border-disabled: var(--ui-custom-checkbox-border-disabled, var(--grayscale-spacer-light));--ui-checkbox-bg-default: var(--ui-custom-checkbox-bg-default, var(--grayscale-white));--ui-checkbox-bg-checked: var(--ui-custom-checkbox-bg-checked, var(--corporate-purple));--ui-checkbox-bg-disabled: var(--ui-custom-checkbox-bg-disabled, var(--grayscale-disabled));--ui-checkbox-svg-stroke: var(--ui-custom-checkbox-svg-stroke, var(--grayscale-white));--ui-checkbox-outline-width-default: var(--ui-custom-checkbox-outline-width-default, .0625em);--ui-checkbox-outline-style: var(--ui-custom-checkbox-outline-style, solid);--ui-checkbox-outline-color-default: var(--ui-custom-checkbox-outline-color, transparent);--ui-checkbox-outline-color-active: var(--ui-custom-checkbox-outline-color-active, var(--corporate-purple));--ui-checkbox-outline-offset: var(--ui-custom-checkbox-outline-offset, .125em);--ui-checkbox-label-color: var(--ui-custom-checkbox-label-color, var(--grayscale-black));--ui-checkbox-label-color-disabled: var(--ui-custom-checkbox-label-color-disabled, var(--grayscale-disabled));--ui-checkbox-label-font-weight: var(--ui-custom-checkbox-label-font-weight, 400);--ui-checkbox-label-font-size: var(--ui-custom-checkbox-label-font-size, 1em);--ui-checkbox-label-line-height: var(--ui-custom-checkbox-label-line-height, 148%);--ui-checkbox-spacing-left: var(--ui-custom-checkbox-spacing-left, 1.5em)}.ui-checkbox{--checkbox-border-color: var(--ui-checkbox-border-default);--checkbox-bg: var(--ui-checkbox-bg-default);--checkbox-label-color: var(--ui-checkbox-label-color);--checkbox-label-font-weight: var(--ui-checkbox-label-font-weight);--checkbox-label-font-size: var(--ui-checkbox-label-font-size);--checkbox-label-line-height: var(--ui-checkbox-label-line-height);--checkbox-svg-stroke: var(--ui-checkbox-svg-stroke);--checkbox-outline-width: var(--ui-checkbox-outline-width-default);--checkbox-outline-style: var(--ui-checkbox-outline-style);--checkbox-outline-color: var(--ui-checkbox-outline-color-default);--checkbox-outline-offset: var(--ui-checkbox-outline-offset);--checkbox-spacing-left: var(--ui-checkbox-spacing-left)}.ui-checkbox-input{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;-webkit-clip-path:inset(50%);clip-path:inset(50%);border:0}.ui-checkbox-input:focus+label{--checkbox-outline-color: var(--ui-checkbox-outline-color-active)}.ui-checkbox-input:disabled+label{--checkbox-label-color: var(--ui-checkbox-label-color-disabled);--checkbox-border-color: var(--ui-checkbox-border-disabled)}.ui-checkbox-input:is(.ui-checkbox-input:disabled):is(.ui-checkbox-input:checked)+label:before{--checkbox-bg: var(--ui-checkbox-bg-disabled);--checkbox-border-color: var(--ui-checkbox-border-disabled)}.ui-checkbox-input:checked+label{--checkbox-border-color: var(--corporate-purple);--checkbox-bg: var(--ui-checkbox-bg-checked)}.ui-checkbox-input:checked+label svg path{stroke-dashoffset:0}.ui-checkbox-label{position:relative;padding-left:var(--checkbox-spacing-left);font-weight:var(--checkbox-label-font-weight);font-size:var(--checkbox-label-font-size);line-height:var(--checkbox-label-line-height);color:var(--checkbox-label-color);-webkit-user-select:none;user-select:none;cursor:pointer}.ui-checkbox-label--not-text{padding-left:0}.ui-checkbox-label svg{position:absolute;left:.15625em;top:.3125em;width:.75em;height:.75em;pointer-events:none}.ui-checkbox-label svg path{stroke-dashoffset:6.9375em;stroke-dasharray:6.9375em;stroke:var(--checkbox-svg-stroke);transition:all .25s ease-out}@media (prefers-reduced-motion: reduce){.ui-checkbox-label svg path{transition:none}}.ui-checkbox-label:before{content:\"\";width:1.125em;height:1.125em;position:absolute;left:0;bottom:0;margin:auto;top:0;border:.0625em solid var(--checkbox-border-color);background-color:var(--checkbox-bg);border-radius:.25em;transition:all .25s ease-out;outline-width:var(--checkbox-outline-width);outline-style:var(--checkbox-outline-style);outline-color:var(--checkbox-outline-color);outline-offset:var(--checkbox-outline-offset)}@media (prefers-reduced-motion: reduce){.ui-checkbox-label:before{transition:none}}\n"], dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-checkbox', standalone: true, imports: [
                        FormsModule
                    ], encapsulation: ViewEncapsulation.None, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => UICheckboxComponent),
                            multi: true
                        }
                    ], template: "<div class=\"ui-checkbox\">\n    <input \n        [id]=\"id\" \n        class=\"ui-checkbox-input\" \n        type=\"checkbox\" \n        role=\"checkbox\"\n        [attr.aria-disabled]=\"isDisabled\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.aria-checked]=\"isCheckated\"\n        [checked]=\"isCheckated\" \n        [disabled]=\"isDisabled\"\n        [tabIndex]=\"isDisabled ? -1 : tabIndex\"\n        [(ngModel)]=\"isCheckated\"\n        (ngModelChange)=\"modelChangeFn($event)\"\n    />\n    <label \n        class=\"ui-checkbox-label\" \n        [class.ui-checkbox-label--not-text]=\"!label\" \n        [for]=\"id\">\n        <svg viewBox=\"0 0 100 100\">\n            <path fill=\"none\" stroke=\"#000\" stroke-width=\"13\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                stroke-miterlimit=\"10\" d=\"M12.1 52.1l24.4 24.4 53-53\" />\n        </svg>\n        {{ label }}\n    </label>\n</div>", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}:root{--ui-checkbox-border-default: var(--ui-custom-checkbox-border-default, var(--grayscale-spacer));--ui-checkbox-border-checked: var(--ui-custom-checkbox-border-checked, var(--corporate-purple));--ui-checkbox-border-disabled: var(--ui-custom-checkbox-border-disabled, var(--grayscale-spacer-light));--ui-checkbox-bg-default: var(--ui-custom-checkbox-bg-default, var(--grayscale-white));--ui-checkbox-bg-checked: var(--ui-custom-checkbox-bg-checked, var(--corporate-purple));--ui-checkbox-bg-disabled: var(--ui-custom-checkbox-bg-disabled, var(--grayscale-disabled));--ui-checkbox-svg-stroke: var(--ui-custom-checkbox-svg-stroke, var(--grayscale-white));--ui-checkbox-outline-width-default: var(--ui-custom-checkbox-outline-width-default, .0625em);--ui-checkbox-outline-style: var(--ui-custom-checkbox-outline-style, solid);--ui-checkbox-outline-color-default: var(--ui-custom-checkbox-outline-color, transparent);--ui-checkbox-outline-color-active: var(--ui-custom-checkbox-outline-color-active, var(--corporate-purple));--ui-checkbox-outline-offset: var(--ui-custom-checkbox-outline-offset, .125em);--ui-checkbox-label-color: var(--ui-custom-checkbox-label-color, var(--grayscale-black));--ui-checkbox-label-color-disabled: var(--ui-custom-checkbox-label-color-disabled, var(--grayscale-disabled));--ui-checkbox-label-font-weight: var(--ui-custom-checkbox-label-font-weight, 400);--ui-checkbox-label-font-size: var(--ui-custom-checkbox-label-font-size, 1em);--ui-checkbox-label-line-height: var(--ui-custom-checkbox-label-line-height, 148%);--ui-checkbox-spacing-left: var(--ui-custom-checkbox-spacing-left, 1.5em)}.ui-checkbox{--checkbox-border-color: var(--ui-checkbox-border-default);--checkbox-bg: var(--ui-checkbox-bg-default);--checkbox-label-color: var(--ui-checkbox-label-color);--checkbox-label-font-weight: var(--ui-checkbox-label-font-weight);--checkbox-label-font-size: var(--ui-checkbox-label-font-size);--checkbox-label-line-height: var(--ui-checkbox-label-line-height);--checkbox-svg-stroke: var(--ui-checkbox-svg-stroke);--checkbox-outline-width: var(--ui-checkbox-outline-width-default);--checkbox-outline-style: var(--ui-checkbox-outline-style);--checkbox-outline-color: var(--ui-checkbox-outline-color-default);--checkbox-outline-offset: var(--ui-checkbox-outline-offset);--checkbox-spacing-left: var(--ui-checkbox-spacing-left)}.ui-checkbox-input{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;-webkit-clip-path:inset(50%);clip-path:inset(50%);border:0}.ui-checkbox-input:focus+label{--checkbox-outline-color: var(--ui-checkbox-outline-color-active)}.ui-checkbox-input:disabled+label{--checkbox-label-color: var(--ui-checkbox-label-color-disabled);--checkbox-border-color: var(--ui-checkbox-border-disabled)}.ui-checkbox-input:is(.ui-checkbox-input:disabled):is(.ui-checkbox-input:checked)+label:before{--checkbox-bg: var(--ui-checkbox-bg-disabled);--checkbox-border-color: var(--ui-checkbox-border-disabled)}.ui-checkbox-input:checked+label{--checkbox-border-color: var(--corporate-purple);--checkbox-bg: var(--ui-checkbox-bg-checked)}.ui-checkbox-input:checked+label svg path{stroke-dashoffset:0}.ui-checkbox-label{position:relative;padding-left:var(--checkbox-spacing-left);font-weight:var(--checkbox-label-font-weight);font-size:var(--checkbox-label-font-size);line-height:var(--checkbox-label-line-height);color:var(--checkbox-label-color);-webkit-user-select:none;user-select:none;cursor:pointer}.ui-checkbox-label--not-text{padding-left:0}.ui-checkbox-label svg{position:absolute;left:.15625em;top:.3125em;width:.75em;height:.75em;pointer-events:none}.ui-checkbox-label svg path{stroke-dashoffset:6.9375em;stroke-dasharray:6.9375em;stroke:var(--checkbox-svg-stroke);transition:all .25s ease-out}@media (prefers-reduced-motion: reduce){.ui-checkbox-label svg path{transition:none}}.ui-checkbox-label:before{content:\"\";width:1.125em;height:1.125em;position:absolute;left:0;bottom:0;margin:auto;top:0;border:.0625em solid var(--checkbox-border-color);background-color:var(--checkbox-bg);border-radius:.25em;transition:all .25s ease-out;outline-width:var(--checkbox-outline-width);outline-style:var(--checkbox-outline-style);outline-color:var(--checkbox-outline-color);outline-offset:var(--checkbox-outline-offset)}@media (prefers-reduced-motion: reduce){.ui-checkbox-label:before{transition:none}}\n"] }]
        }], propDecorators: { id: [{
                type: Input
            }], name: [{
                type: Input
            }], label: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], isChecked: [{
                type: Input
            }], isDisabled: [{
                type: Input
            }], outputChecked: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbWFuam9uLXVpL3NyYy9saWIvY29tcG9uZW50cy9jaGVja2JveC9jaGVja2JveC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tYW5qb24tdWkvc3JjL2xpYi9jb21wb25lbnRzL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RHLE9BQU8sRUFBd0IsV0FBVyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7OztBQW9CdEYsTUFBTSxPQUFPLG1CQUFtQjtJQWxCaEM7UUE4Qlksa0JBQWEsR0FBMEIsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUd0RSxhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBRXJCLFlBQU8sR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7S0F1QjNCO0lBbENDLElBQ0ksU0FBUyxDQUFDLEtBQWM7UUFDMUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQUFBLENBQUM7SUFVRixVQUFVLENBQUMsT0FBZ0I7UUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUM7SUFDM0IsQ0FBQztJQUVELGdCQUFnQixDQUFDLEVBQU87UUFDdEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRUQsaUJBQWlCLENBQUMsRUFBTztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsZ0JBQWdCLENBQUUsVUFBbUI7UUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQztJQUVELGFBQWEsQ0FBQyxPQUFnQjtRQUM1QixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNqQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxDQUFDOytHQXRDVSxtQkFBbUI7bUdBQW5CLG1CQUFtQixxT0FUbkI7WUFDVDtnQkFDRSxPQUFPLEVBQUUsaUJBQWlCO2dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFtQixDQUFDO2dCQUNsRCxLQUFLLEVBQUUsSUFBSTthQUNaO1NBQ0YsMEJDbEJILHE2QkF5Qk0sazBMRGxCRixXQUFXOzs0RkFjRixtQkFBbUI7a0JBbEIvQixTQUFTOytCQUNFLGFBQWEsY0FDWCxJQUFJLFdBQ1A7d0JBQ1AsV0FBVztxQkFDWixpQkFHYyxpQkFBaUIsQ0FBQyxJQUFJLGFBQzFCO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDOzRCQUNsRCxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjs4QkFLUSxFQUFFO3NCQUFWLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUVGLFNBQVM7c0JBRFosS0FBSztnQkFJRyxVQUFVO3NCQUFsQixLQUFLO2dCQUVJLGFBQWE7c0JBQXRCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSW5wdXQsIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBGb3Jtc01vZHVsZSwgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3VpLWNoZWNrYm94JyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIEZvcm1zTW9kdWxlXG4gIF0sXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGVja2JveC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9jaGVja2JveC5jb21wb25lbnQuc2NzcycsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVUlDaGVja2JveENvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxuXG59KVxuZXhwb3J0IGNsYXNzIFVJQ2hlY2tib3hDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG5cbiAgQElucHV0KCkgaWQhOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG5hbWUhOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsITogc3RyaW5nO1xuICBASW5wdXQoKSBhcmlhTGFiZWwhOiBzdHJpbmdcbiAgQElucHV0KCkgXG4gIHNldCBpc0NoZWNrZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmlzQ2hlY2thdGVkID0gdmFsdWU7XG4gIH07XG4gIEBJbnB1dCgpIGlzRGlzYWJsZWQhOiBib29sZWFuO1xuXG4gIEBPdXRwdXQoKSBvdXRwdXRDaGVja2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4gPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgcHVibGljIGlzQ2hlY2thdGVkITogYm9vbGVhbjtcbiAgcHVibGljIHRhYkluZGV4OiBudW1iZXIgPSAwO1xuICBwdWJsaWMgb25DaGFuZ2VDYWxsYmFjaz86IChjaGVja2VkOiBib29sZWFuKSA9PiB2b2lkO1xuICBwdWJsaWMgb25Ub3VjaCA9ICgpID0+IHt9O1xuXG4gIHdyaXRlVmFsdWUoY2hlY2tlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuaXNDaGVja2VkID0gY2hlY2tlZDtcbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25DaGFuZ2VDYWxsYmFjayA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaCA9IGZuO1xuICB9XG5cbiAgc2V0RGlzYWJsZWRTdGF0ZT8oaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuaXNEaXNhYmxlZCA9IGlzRGlzYWJsZWQ7XG4gIH1cbiAgXG4gIG1vZGVsQ2hhbmdlRm4oY2hlY2tlZDogYm9vbGVhbikge1xuICAgIHRoaXMub25DaGFuZ2VDYWxsYmFjaz8uKGNoZWNrZWQpO1xuICAgIHRoaXMub3V0cHV0Q2hlY2tlZC5lbWl0KGNoZWNrZWQpO1xuICB9XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJ1aS1jaGVja2JveFwiPlxuICAgIDxpbnB1dCBcbiAgICAgICAgW2lkXT1cImlkXCIgXG4gICAgICAgIGNsYXNzPVwidWktY2hlY2tib3gtaW5wdXRcIiBcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCIgXG4gICAgICAgIHJvbGU9XCJjaGVja2JveFwiXG4gICAgICAgIFthdHRyLmFyaWEtZGlzYWJsZWRdPVwiaXNEaXNhYmxlZFwiXG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCJcbiAgICAgICAgW2F0dHIuYXJpYS1jaGVja2VkXT1cImlzQ2hlY2thdGVkXCJcbiAgICAgICAgW2NoZWNrZWRdPVwiaXNDaGVja2F0ZWRcIiBcbiAgICAgICAgW2Rpc2FibGVkXT1cImlzRGlzYWJsZWRcIlxuICAgICAgICBbdGFiSW5kZXhdPVwiaXNEaXNhYmxlZCA/IC0xIDogdGFiSW5kZXhcIlxuICAgICAgICBbKG5nTW9kZWwpXT1cImlzQ2hlY2thdGVkXCJcbiAgICAgICAgKG5nTW9kZWxDaGFuZ2UpPVwibW9kZWxDaGFuZ2VGbigkZXZlbnQpXCJcbiAgICAvPlxuICAgIDxsYWJlbCBcbiAgICAgICAgY2xhc3M9XCJ1aS1jaGVja2JveC1sYWJlbFwiIFxuICAgICAgICBbY2xhc3MudWktY2hlY2tib3gtbGFiZWwtLW5vdC10ZXh0XT1cIiFsYWJlbFwiIFxuICAgICAgICBbZm9yXT1cImlkXCI+XG4gICAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMDAgMTAwXCI+XG4gICAgICAgICAgICA8cGF0aCBmaWxsPVwibm9uZVwiIHN0cm9rZT1cIiMwMDBcIiBzdHJva2Utd2lkdGg9XCIxM1wiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBzdHJva2UtbGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgICAgICAgICAgc3Ryb2tlLW1pdGVybGltaXQ9XCIxMFwiIGQ9XCJNMTIuMSA1Mi4xbDI0LjQgMjQuNCA1My01M1wiIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICB7eyBsYWJlbCB9fVxuICAgIDwvbGFiZWw+XG48L2Rpdj4iXX0=