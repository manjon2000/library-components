import { booleanAttribute, ChangeDetectionStrategy, Component, EventEmitter, inject, Input, Output, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CoreManjonUI } from '../../../config/core.config';
import * as i0 from "@angular/core";
import * as i1 from "./calendar.service";
import * as i2 from "@angular/common";
export class UICalendarComponent {
    set startDate(start) {
        const startDate = new Date(start);
        startDate.setHours(0, 0, 0, 0);
        this._startDate = startDate;
        this.cdr.markForCheck();
    }
    ;
    set endDate(end) {
        const endDate = new Date(end);
        endDate.setHours(0, 0, 0, 0);
        console.log(endDate);
        this._endDate = endDate;
        this.cdr.markForCheck();
    }
    constructor(cdr, calendarService) {
        this.cdr = cdr;
        this.calendarService = calendarService;
        this.type = 'single';
        this.locale = 'es-ES';
        this.cellAspectRatio = 1;
        this.isShowDaysOtherMonth = true;
        this.dateSelect = new EventEmitter();
        this.dateRangeSelect = new EventEmitter();
        this.dateMultipleSelect = new EventEmitter();
        this.config = inject(CoreManjonUI);
        this.currentDate = new Date();
        this._currentOptionDate = 'start';
        this.allmonth = this.config.getTranslation(this.locale, 'monthNames');
    }
    ngOnInit() {
        const date = this._startDate || new Date();
        this.setYearMonth(date);
        this.initWeeks();
        this.weeks = this.calendarService.initWeeks$;
        this.getDayNames();
        console.log(this.allmonth);
    }
    getDayNames() {
        const dayNames = this.config
            .getTranslation(this.locale, 'dayNames');
        if (Array.isArray(dayNames)) {
            this.dayNames = dayNames;
        }
    }
    ngOnChanges(changes) {
        if (changes['type'] && (changes['type'].previousValue !== changes['type'].currentValue)) {
            this.initWeeks();
        }
        if (changes['endDate'] && (changes['endDate'].previousValue !== changes['endDate'].currentValue)) {
            const endDate = new Date(changes['endDate'].currentValue);
            endDate.setHours(0, 0, 0, 0);
            this._endDate = endDate;
            this.setYearMonth(endDate);
            this.initWeeks();
        }
        if (changes['startDate'] && (changes['startDate'].previousValue !== changes['startDate'].currentValue)) {
            const startDate = new Date(changes['startDate'].currentValue);
            startDate.setHours(0, 0, 0, 0);
            this._startDate = startDate;
            this.setYearMonth(startDate);
            this.initWeeks();
        }
        if (changes['locale'] && (changes['locale'].previousValue !== changes['locale'].currentValue)) {
            this.getDayNames();
            this.allmonth = this.config.getTranslation(this.locale, 'monthNames');
            console.log(this.allmonth);
        }
    }
    ngOnDestroy() {
        if (this._subscriptionWeeks) {
            this._subscriptionWeeks.unsubscribe();
        }
    }
    getDayName(index) {
        return this.dayNames[index];
    }
    getTranslation(key) {
        return this.config.getTranslation(this.locale, key);
    }
    initWeeks() {
        this.calendarService
            .decomposeMonthIntoWeeks(this.currentYear, this.currentMonth, this.type, this.isShowDaysOtherMonth, this._startDate, this._endDate);
    }
    trackByIndex(index, item) {
        return index;
    }
    trackByIndexToDayNames(index, item) {
        return index;
    }
    setCellAspectRatio(numCols) {
        const padding = (100 * this.cellAspectRatio) / numCols / 2;
        this._cellPadding = `${padding.toFixed(2)}%`;
        this._cellWidth = `${100 / numCols}%`;
        this.cdr.markForCheck();
    }
    onPrevMonth() {
        if (this.currentMonth === 1) {
            this.currentMonth = 12;
            this.currentYear--;
        }
        else {
            this.currentMonth--;
        }
        this.initWeeks();
        this.cdr.markForCheck();
    }
    onNextMonth() {
        if ((this.currentMonth + 1) === 12) {
            this.currentMonth = 1;
            this.currentYear++;
        }
        else {
            this.currentMonth++;
        }
        this.initWeeks();
        this.cdr.markForCheck();
    }
    isDateSelected(dateUnix) {
        const initialDate = this.calendarService.formatToUnix(this._startDate);
        return dateUnix === initialDate;
    }
    isCurrentDate(dateUnix) {
        const currentDateToUnix = this.calendarService.formatToUnix(new Date());
        return (dateUnix ? dateUnix === currentDateToUnix : false);
    }
    onSelectedDate(option) {
        switch (this.type) {
            case 'single':
                const startDate = this.calendarService.onSelectedDateSingle(option?.ISO8601);
                this._startDate = startDate;
                this.dateSelect.emit(startDate);
                break;
            case 'range':
                this.onSelectedDateRange(option?.ISO8601);
                this.toggleOptionDate();
                break;
        }
        this.cdr.markForCheck();
    }
    onSelectedDateRange(ISO8601) {
        switch (this._currentOptionDate) {
            case 'start':
                const startDate = this.calendarService.onSelectedDateSingle(ISO8601);
                this._startDate = startDate;
                this.initWeeks();
                break;
            case 'end':
                const endDate = this.calendarService.onSelectedDateSingle(ISO8601);
                this._endDate = endDate;
                this.initWeeks();
                if (this.verifyDateRange()) {
                    this.dateRangeSelect.emit({ start: this._startDate, end: this._endDate });
                }
                break;
        }
    }
    isEndDateRange(dateUnix) {
        return (this._endDate ?
            dateUnix === this.calendarService.formatToUnix(this._endDate) :
            false);
    }
    getCurrentMonth() {
        return this.allmonth[new Date(this._startDate || new Date()).getMonth()] ?? '0';
    }
    getCurrentYear() {
        return this._startDate.getFullYear() ?? new Date().getFullYear();
    }
    setYearMonth(date) {
        const currentDate = new Date(date);
        this.currentYear = currentDate.getFullYear();
        this.currentMonth = (currentDate.getMonth() + 1);
    }
    toggleOptionDate() {
        if (this._currentOptionDate === 'start') {
            if (this._endDate) {
                this._endDate = undefined;
            }
            this._currentOptionDate = 'end';
        }
        else {
            this.initWeeks();
            this._currentOptionDate = 'start';
        }
    }
    verifyDateRange() {
        if (!this._endDate)
            return false;
        const startDateToUnix = this.calendarService
            .formatToUnix(this._startDate);
        const endDateToUnix = this.calendarService
            .formatToUnix(this._endDate);
        return !!(endDateToUnix >= startDateToUnix);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICalendarComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.CalendarService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.12", type: UICalendarComponent, isStandalone: true, selector: "ui-calendar", inputs: { startDate: "startDate", endDate: "endDate", type: "type", locale: "locale", limitYearsPreview: "limitYearsPreview", cellAspectRatio: "cellAspectRatio", isShowDaysOtherMonth: ["isShowDaysOtherMonth", "isShowDaysOtherMonth", booleanAttribute], isResponsive: ["isResponsive", "isResponsive", booleanAttribute], isSelectable: ["isSelectable", "isSelectable", booleanAttribute], isSelectCurrentDay: ["isSelectCurrentDay", "isSelectCurrentDay", booleanAttribute] }, outputs: { dateSelect: "dateSelect", dateRangeSelect: "dateRangeSelect", dateMultipleSelect: "dateMultipleSelect" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"ui-calendar\">\n  <div class=\"ui-calendar-controls\">\n    <button aria-label=\"Preview Month\" (click)=\"onPrevMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.8326 4.18024C16.0558 4.42056 16.0558 4.8102 15.8326 5.05053L9.37955 12L15.8326 18.9495C16.0558 19.1898 16.0558 19.5794 15.8326 19.8198C15.6095 20.0601 15.2477 20.0601 15.0245 19.8198L8.16737 12.4351C7.94421 12.1948 7.94421 11.8052 8.16737 11.5649L15.0245 4.18024C15.2477 3.93992 15.6095 3.93992 15.8326 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n    <div class=\"ui-calendar-controls-others\">\n      <button>{{ getCurrentMonth() }}</button>\n      <button>\n        {{ getCurrentYear() }}\n      </button>\n    </div>\n    <button aria-label=\"Next Month\" (click)=\"onNextMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.16737 4.18024C8.39052 3.93992 8.75233 3.93992 8.97549 4.18024L15.8326 11.5649C15.9398 11.6803 16 11.8368 16 12C16 12.1632 15.9398 12.3197 15.8326 12.4351L8.97549 19.8198C8.75233 20.0601 8.39052 20.0601 8.16737 19.8198C7.94421 19.5794 7.94421 19.1898 8.16737 18.9495L14.6204 12L8.16737 5.05053C7.94421 4.8102 7.94421 4.42056 8.16737 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n  </div>\n  <table role=\"grid\" class=\"ui-calendar-table\">\n    <thead class=\"ui-calendar-table-head\">\n      @if (getTranslation('dayNamesShort')) {\n        <tr>\n          @for (name of getTranslation('dayNamesShort'); let idx = $index; track trackByIndexToDayNames;) {\n            <th scope=\"col\">\n              <span class=\"visually-hidden\"> {{ getDayName(idx) | titlecase }} </span>\n              <span aria-hidden=\"true\">{{ name | uppercase }}</span>\n            </th>\n          }\n        </tr>\n      }\n    </thead>\n    <tbody class=\"ui-calendar-table-body\">\n      @for (week of weeks | async; let idx = $index; track trackByIndex;) {\n      <tr role=\"row\">\n        @for (day of week; track day.ISO8601) {\n          <td\n            role=\"gridcell\"\n            [style.width]=\"_cellWidth\"\n            [style.paddingTop]=\"_cellPadding\"\n            [style.paddingBottom]=\"_cellPadding\"\n            >\n            <button\n              role=\"option\"\n              [class.readonly]=\"day.isAnotherMonth\"\n              [attr.disabled]=\"day.isAnotherMonth || null\"\n              [class.range]=\"day.isSelected && _endDate && type === 'range'\"\n              [class.end-date]=\"isEndDateRange(day.unix)\"\n              [attr.tabIndex]=\"day.isAnotherMonth ? -1 : 0\"\n              [attr.aria-current]=\"isSelectCurrentDay && type === 'single' ? (isCurrentDate(day.unix) ? 'date' : null) : null\"\n              [attr.aria-selected]=\"isDateSelected(day.unix)\"\n              [attr.data-date]=\"day.ISO8601 || null\"\n              (click)=\"onSelectedDate(day)\">\n              {{ day.day }}\n            </button>\n          </td>\n        }\n      </tr>\n      }\n    </tbody>\n  </table>\n</div>\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;left:0}.ui-calendar{width:280px;border:1px solid #DEDEDE;padding:4px 0;border-radius:4px}.ui-calendar-controls{display:flex;align-items:center;justify-content:space-between;padding:.24rem .75rem}.ui-calendar-controls button{height:max-content;display:flex;align-items:center;justify-content:center}.ui-calendar-controls button:focus{border-radius:8px;outline-offset:2px;outline:1px solid red}.ui-calendar-controls-others{display:flex;gap:.25rem}.ui-calendar-controls-others button{font:inherit;font-size:14px;line-height:16px}.ui-calendar-table{width:100%;border-collapse:collapse;table-layout:fixed}.ui-calendar-table-head{margin-bottom:1rem;border-bottom:1px solid #DEDEDE}.ui-calendar-table-head th{-webkit-user-select:none;user-select:none}.ui-calendar-table-head th:hover{cursor:default}.ui-calendar-table-head th span{font-weight:500;font-size:12px;line-height:14px}.ui-calendar-table-body tr{margin:0;padding:0;height:0;position:relative;text-align:center}.ui-calendar-table-body tr td button{width:100%;height:auto;display:flex;align-items:center;justify-content:center;margin:0;padding:0;aspect-ratio:1;font-weight:500;font-size:14px;line-height:16px;margin:.15rem 0;color:var(--grayscale-black)}.ui-calendar-table-body tr td button:focus{border-radius:999px;outline:1px solid var(--corporate-purple)}.ui-calendar-table-body tr td button.range{background-color:var(--corporate-purple);color:var(--grayscale-white)}.ui-calendar-table-body tr td button.range:is([aria-selected=true]){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button.range:is(.ui-calendar-table-body tr td button.end-date){border-radius:0 999px 999px 0}.ui-calendar-table-body tr td button[aria-selected=true]:has(.ui-calendar-table-body tr td button.range){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button[aria-current]):not(.ui-calendar-table-body tr td button.range):hover{border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button[aria-current]{background-color:var(--corporate-purple);color:var(--grayscale-white);border-radius:999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button.range):is(.ui-calendar-table-body tr td button[aria-selected=true]){border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button.readonly{font-weight:400;color:#707070;pointer-events:none}.ui-calendar-table-body tr td button.readonly:hover{cursor:default}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i2.TitleCasePipe, name: "titlecase" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICalendarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-calendar', standalone: true, imports: [
                        CommonModule,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<div class=\"ui-calendar\">\n  <div class=\"ui-calendar-controls\">\n    <button aria-label=\"Preview Month\" (click)=\"onPrevMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.8326 4.18024C16.0558 4.42056 16.0558 4.8102 15.8326 5.05053L9.37955 12L15.8326 18.9495C16.0558 19.1898 16.0558 19.5794 15.8326 19.8198C15.6095 20.0601 15.2477 20.0601 15.0245 19.8198L8.16737 12.4351C7.94421 12.1948 7.94421 11.8052 8.16737 11.5649L15.0245 4.18024C15.2477 3.93992 15.6095 3.93992 15.8326 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n    <div class=\"ui-calendar-controls-others\">\n      <button>{{ getCurrentMonth() }}</button>\n      <button>\n        {{ getCurrentYear() }}\n      </button>\n    </div>\n    <button aria-label=\"Next Month\" (click)=\"onNextMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.16737 4.18024C8.39052 3.93992 8.75233 3.93992 8.97549 4.18024L15.8326 11.5649C15.9398 11.6803 16 11.8368 16 12C16 12.1632 15.9398 12.3197 15.8326 12.4351L8.97549 19.8198C8.75233 20.0601 8.39052 20.0601 8.16737 19.8198C7.94421 19.5794 7.94421 19.1898 8.16737 18.9495L14.6204 12L8.16737 5.05053C7.94421 4.8102 7.94421 4.42056 8.16737 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n  </div>\n  <table role=\"grid\" class=\"ui-calendar-table\">\n    <thead class=\"ui-calendar-table-head\">\n      @if (getTranslation('dayNamesShort')) {\n        <tr>\n          @for (name of getTranslation('dayNamesShort'); let idx = $index; track trackByIndexToDayNames;) {\n            <th scope=\"col\">\n              <span class=\"visually-hidden\"> {{ getDayName(idx) | titlecase }} </span>\n              <span aria-hidden=\"true\">{{ name | uppercase }}</span>\n            </th>\n          }\n        </tr>\n      }\n    </thead>\n    <tbody class=\"ui-calendar-table-body\">\n      @for (week of weeks | async; let idx = $index; track trackByIndex;) {\n      <tr role=\"row\">\n        @for (day of week; track day.ISO8601) {\n          <td\n            role=\"gridcell\"\n            [style.width]=\"_cellWidth\"\n            [style.paddingTop]=\"_cellPadding\"\n            [style.paddingBottom]=\"_cellPadding\"\n            >\n            <button\n              role=\"option\"\n              [class.readonly]=\"day.isAnotherMonth\"\n              [attr.disabled]=\"day.isAnotherMonth || null\"\n              [class.range]=\"day.isSelected && _endDate && type === 'range'\"\n              [class.end-date]=\"isEndDateRange(day.unix)\"\n              [attr.tabIndex]=\"day.isAnotherMonth ? -1 : 0\"\n              [attr.aria-current]=\"isSelectCurrentDay && type === 'single' ? (isCurrentDate(day.unix) ? 'date' : null) : null\"\n              [attr.aria-selected]=\"isDateSelected(day.unix)\"\n              [attr.data-date]=\"day.ISO8601 || null\"\n              (click)=\"onSelectedDate(day)\">\n              {{ day.day }}\n            </button>\n          </td>\n        }\n      </tr>\n      }\n    </tbody>\n  </table>\n</div>\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;left:0}.ui-calendar{width:280px;border:1px solid #DEDEDE;padding:4px 0;border-radius:4px}.ui-calendar-controls{display:flex;align-items:center;justify-content:space-between;padding:.24rem .75rem}.ui-calendar-controls button{height:max-content;display:flex;align-items:center;justify-content:center}.ui-calendar-controls button:focus{border-radius:8px;outline-offset:2px;outline:1px solid red}.ui-calendar-controls-others{display:flex;gap:.25rem}.ui-calendar-controls-others button{font:inherit;font-size:14px;line-height:16px}.ui-calendar-table{width:100%;border-collapse:collapse;table-layout:fixed}.ui-calendar-table-head{margin-bottom:1rem;border-bottom:1px solid #DEDEDE}.ui-calendar-table-head th{-webkit-user-select:none;user-select:none}.ui-calendar-table-head th:hover{cursor:default}.ui-calendar-table-head th span{font-weight:500;font-size:12px;line-height:14px}.ui-calendar-table-body tr{margin:0;padding:0;height:0;position:relative;text-align:center}.ui-calendar-table-body tr td button{width:100%;height:auto;display:flex;align-items:center;justify-content:center;margin:0;padding:0;aspect-ratio:1;font-weight:500;font-size:14px;line-height:16px;margin:.15rem 0;color:var(--grayscale-black)}.ui-calendar-table-body tr td button:focus{border-radius:999px;outline:1px solid var(--corporate-purple)}.ui-calendar-table-body tr td button.range{background-color:var(--corporate-purple);color:var(--grayscale-white)}.ui-calendar-table-body tr td button.range:is([aria-selected=true]){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button.range:is(.ui-calendar-table-body tr td button.end-date){border-radius:0 999px 999px 0}.ui-calendar-table-body tr td button[aria-selected=true]:has(.ui-calendar-table-body tr td button.range){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button[aria-current]):not(.ui-calendar-table-body tr td button.range):hover{border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button[aria-current]{background-color:var(--corporate-purple);color:var(--grayscale-white);border-radius:999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button.range):is(.ui-calendar-table-body tr td button[aria-selected=true]){border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button.readonly{font-weight:400;color:#707070;pointer-events:none}.ui-calendar-table-body tr td button.readonly:hover{cursor:default}\n"] }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.CalendarService }], propDecorators: { startDate: [{
                type: Input
            }], endDate: [{
                type: Input
            }], type: [{
                type: Input
            }], locale: [{
                type: Input
            }], limitYearsPreview: [{
                type: Input
            }], cellAspectRatio: [{
                type: Input
            }], isShowDaysOtherMonth: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isResponsive: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isSelectable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isSelectCurrentDay: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], dateSelect: [{
                type: Output
            }], dateRangeSelect: [{
                type: Output
            }], dateMultipleSelect: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbWFuam9uLXVpL3NyYy9saWIvY29tcG9uZW50cy9jYWxlbmRhci9jYWxlbmRhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tYW5qb24tdWkvc3JjL2xpYi9jb21wb25lbnRzL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBcUIsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFnQyxNQUFNLEVBQWlCLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTdNLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUkvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7QUFhM0QsTUFBTSxPQUFPLG1CQUFtQjtJQUM5QixJQUNJLFNBQVMsQ0FBQyxLQUFXO1FBQ3ZCLE1BQU0sU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7UUFDNUIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBQUEsQ0FBQztJQUNGLElBQ0ksT0FBTyxDQUFDLEdBQVM7UUFDbkIsTUFBTSxPQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDOUIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztR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QUUvQixPQUFPLENBQUMsQ0FBQyxDQUFDLGFBQWEsSUFBSSxlQUFlLENBQUMsQ0FBQztJQUM5QyxDQUFDOytHQTdQVSxtQkFBbUI7bUdBQW5CLG1CQUFtQix3UkF1QlYsZ0JBQWdCLGtEQUNoQixnQkFBZ0Isa0RBQ2hCLGdCQUFnQixvRUFDaEIsZ0JBQWdCLHVLQzdDdEMsd3FHQThEQSx3eklEbERJLFlBQVk7OzRGQU9ILG1CQUFtQjtrQkFYL0IsU0FBUzsrQkFDRSxhQUFhLGNBQ1gsSUFBSSxXQUNQO3dCQUNQLFlBQVk7cUJBQ2IsbUJBR2dCLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUk7b0hBSWpDLFNBQVM7c0JBRFosS0FBSztnQkFTRixPQUFPO3NCQURWLEtBQUs7Z0JBVUcsSUFBSTtzQkFBWixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBQ0csZUFBZTtzQkFBdkIsS0FBSztnQkFDa0Msb0JBQW9CO3NCQUEzRCxLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQUNFLFlBQVk7c0JBQW5ELEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBQ0UsWUFBWTtzQkFBbkQsS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFDRSxrQkFBa0I7c0JBQXpELEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBRTVCLFVBQVU7c0JBQW5CLE1BQU07Z0JBQ0csZUFBZTtzQkFBeEIsTUFBTTtnQkFDRyxrQkFBa0I7c0JBQTNCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBpbmplY3QsIElucHV0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJRGF0ZXNSYW5nZSwgSVdlZWtzLCBUVHlwZUNhbGVuZGFyIH0gZnJvbSAnLi9jYWxlbmRhci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENhbGVuZGFyU2VydmljZSB9IGZyb20gJy4vY2FsZW5kYXIuc2VydmljZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IElUcmFuc2xhdGlvbiwgVFByZWZpeExhbmd1YWdlIH0gZnJvbSAnLi4vLi4vLi4vYXBpL3RyYW5zbGF0aW9uJztcbmltcG9ydCB7IENvcmVNYW5qb25VSSB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9jb3JlLmNvbmZpZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3VpLWNhbGVuZGFyJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhbGVuZGFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmw6ICcuL2NhbGVuZGFyLmNvbXBvbmVudC5zY3NzJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFVJQ2FsZW5kYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgQElucHV0KClcbiAgc2V0IHN0YXJ0RGF0ZShzdGFydDogRGF0ZSkge1xuICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKHN0YXJ0KTtcbiAgICBzdGFydERhdGUuc2V0SG91cnMoMCwwLDAsMCk7XG5cbiAgICB0aGlzLl9zdGFydERhdGUgPSBzdGFydERhdGU7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH07XG4gIEBJbnB1dCgpXG4gIHNldCBlbmREYXRlKGVuZDogRGF0ZSkge1xuICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZShlbmQpO1xuICAgIGVuZERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG5cbiAgICBjb25zb2xlLmxvZyhlbmREYXRlKVxuXG4gICAgdGhpcy5fZW5kRGF0ZSA9IGVuZERhdGU7XG4gICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgQElucHV0KCkgdHlwZTogVFR5cGVDYWxlbmRhciA9ICdzaW5nbGUnO1xuICBASW5wdXQoKSBsb2NhbGU6IFRQcmVmaXhMYW5ndWFnZSA9ICdlcy1FUyc7XG4gIEBJbnB1dCgpIGxpbWl0WWVhcnNQcmV2aWV3ITogbnVtYmVyO1xuICBASW5wdXQoKSBjZWxsQXNwZWN0UmF0aW86IG51bWJlciA9IDE7XG4gIEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KSBpc1Nob3dEYXlzT3RoZXJNb250aDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KSBpc1Jlc3BvbnNpdmUhOiBib29sZWFuO1xuICBASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSkgaXNTZWxlY3RhYmxlITogYm9vbGVhbjtcbiAgQElucHV0KHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pIGlzU2VsZWN0Q3VycmVudERheSE6IGJvb2xlYW47XG5cbiAgQE91dHB1dCgpIGRhdGVTZWxlY3Q6IEV2ZW50RW1pdHRlcjxEYXRlPiA9IG5ldyBFdmVudEVtaXR0ZXI8RGF0ZT4oKTtcbiAgQE91dHB1dCgpIGRhdGVSYW5nZVNlbGVjdDogRXZlbnRFbWl0dGVyPElEYXRlc1JhbmdlPiA9IG5ldyBFdmVudEVtaXR0ZXI8SURhdGVzUmFuZ2U+KCk7XG4gIEBPdXRwdXQoKSBkYXRlTXVsdGlwbGVTZWxlY3Q6IEV2ZW50RW1pdHRlcjxBcnJheTxEYXRlPj4gPSBuZXcgRXZlbnRFbWl0dGVyPEFycmF5PERhdGU+PigpO1xuXG4gIHB1YmxpYyBjb25maWcgPSBpbmplY3QoQ29yZU1hbmpvblVJKTtcbiAgcHVibGljIF9zdGFydERhdGUhOiBEYXRlO1xuICBwdWJsaWMgX2VuZERhdGUhOiBEYXRlIHwgdW5kZWZpbmVkO1xuICBwdWJsaWMgZGF5TmFtZXMhOiBzdHJpbmdbXTtcbiAgcHVibGljIGN1cnJlbnREYXRlOiBEYXRlID0gbmV3IERhdGUoKTtcbiAgcHVibGljIGN1cnJlbnRZZWFyITogbnVtYmVyO1xuICBwdWJsaWMgY3VycmVudE1vbnRoITogbnVtYmVyO1xuICBwdWJsaWMgd2Vla3MhOiBPYnNlcnZhYmxlPElXZWVrc1tdW10+O1xuICBwdWJsaWMgX2NlbGxQYWRkaW5nITogc3RyaW5nO1xuICBwdWJsaWMgX2NlbGxXaWR0aCE6IHN0cmluZztcbiAgcHJpdmF0ZSBfY3VycmVudE9wdGlvbkRhdGU6ICdzdGFydCcgfCAnZW5kJyA9ICdzdGFydCc7XG4gIHByaXZhdGUgX3N1YnNjcmlwdGlvbldlZWtzITogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIGFsbG1vbnRoID0gdGhpcy5jb25maWcuZ2V0VHJhbnNsYXRpb24odGhpcy5sb2NhbGUsICdtb250aE5hbWVzJyk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgY2FsZW5kYXJTZXJ2aWNlOiBDYWxlbmRhclNlcnZpY2VcbiAgKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBkYXRlID0gdGhpcy5fc3RhcnREYXRlIHx8IG5ldyBEYXRlKClcbiAgICB0aGlzLnNldFllYXJNb250aChkYXRlKTtcbiAgICB0aGlzLmluaXRXZWVrcygpO1xuICAgIHRoaXMud2Vla3MgPSB0aGlzLmNhbGVuZGFyU2VydmljZS5pbml0V2Vla3MkO1xuICAgIHRoaXMuZ2V0RGF5TmFtZXMoKTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLmFsbG1vbnRoKVxuICB9XG5cbiAgZ2V0RGF5TmFtZXMoKTogdm9pZCB7XG4gICAgY29uc3QgZGF5TmFtZXMgPSB0aGlzLmNvbmZpZ1xuICAgICAgLmdldFRyYW5zbGF0aW9uKHRoaXMubG9jYWxlLCAnZGF5TmFtZXMnKTtcbiAgICBpZihBcnJheS5pc0FycmF5KGRheU5hbWVzKSkge1xuICAgICAgdGhpcy5kYXlOYW1lcyA9IGRheU5hbWVzO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlc1sndHlwZSddICYmIChjaGFuZ2VzWyd0eXBlJ10ucHJldmlvdXNWYWx1ZSAhPT0gY2hhbmdlc1sndHlwZSddLmN1cnJlbnRWYWx1ZSkpIHtcbiAgICAgIHRoaXMuaW5pdFdlZWtzKCk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydlbmREYXRlJ10gJiYgKGNoYW5nZXNbJ2VuZERhdGUnXS5wcmV2aW91c1ZhbHVlICE9PSBjaGFuZ2VzWydlbmREYXRlJ10uY3VycmVudFZhbHVlKSkge1xuICAgICAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKGNoYW5nZXNbJ2VuZERhdGUnXS5jdXJyZW50VmFsdWUpO1xuICAgICAgZW5kRGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcblxuICAgICAgdGhpcy5fZW5kRGF0ZSA9IGVuZERhdGU7XG4gICAgICB0aGlzLnNldFllYXJNb250aChlbmREYXRlKTtcbiAgICAgIHRoaXMuaW5pdFdlZWtzKCk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydzdGFydERhdGUnXSAmJiAoY2hhbmdlc1snc3RhcnREYXRlJ10ucHJldmlvdXNWYWx1ZSAhPT0gY2hhbmdlc1snc3RhcnREYXRlJ10uY3VycmVudFZhbHVlKSkge1xuICAgICAgY29uc3Qgc3RhcnREYXRlID0gbmV3IERhdGUoY2hhbmdlc1snc3RhcnREYXRlJ10uY3VycmVudFZhbHVlKTtcbiAgICAgIHN0YXJ0RGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcblxuICAgICAgdGhpcy5fc3RhcnREYXRlID0gc3RhcnREYXRlO1xuICAgICAgdGhpcy5zZXRZZWFyTW9udGgoc3RhcnREYXRlKTtcbiAgICAgIHRoaXMuaW5pdFdlZWtzKCk7XG4gICAgfVxuICAgIGlmIChjaGFuZ2VzWydsb2NhbGUnXSAmJiAoY2hhbmdlc1snbG9jYWxlJ10ucHJldmlvdXNWYWx1ZSAhPT0gY2hhbmdlc1snbG9jYWxlJ10uY3VycmVudFZhbHVlKSkge1xuICAgICAgdGhpcy5nZXREYXlOYW1lcygpO1xuICAgICAgICB0aGlzLmFsbG1vbnRoID0gdGhpcy5jb25maWcuZ2V0VHJhbnNsYXRpb24odGhpcy5sb2NhbGUsICdtb250aE5hbWVzJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWxsbW9udGgpXG5cbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBpZih0aGlzLl9zdWJzY3JpcHRpb25XZWVrcykge1xuICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uV2Vla3MudW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0RGF5TmFtZShpbmRleDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5kYXlOYW1lc1tpbmRleF07XG4gIH1cblxuICBwdWJsaWMgZ2V0VHJhbnNsYXRpb24oa2V5OiBrZXlvZiBJVHJhbnNsYXRpb24pOiBzdHJpbmcgfCBzdHJpbmdbXSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLmdldFRyYW5zbGF0aW9uKHRoaXMubG9jYWxlLCBrZXkpO1xuICB9XG5cbiAgcHVibGljIGluaXRXZWVrcygpOiB2b2lkIHtcbiAgICB0aGlzLmNhbGVuZGFyU2VydmljZVxuICAgICAgLmRlY29tcG9zZU1vbnRoSW50b1dlZWtzKFxuICAgICAgICB0aGlzLmN1cnJlbnRZZWFyLFxuICAgICAgICB0aGlzLmN1cnJlbnRNb250aCxcbiAgICAgICAgdGhpcy50eXBlLFxuICAgICAgICB0aGlzLmlzU2hvd0RheXNPdGhlck1vbnRoLFxuICAgICAgICB0aGlzLl9zdGFydERhdGUsXG4gICAgICAgIHRoaXMuX2VuZERhdGVcbiAgICAgICk7XG4gIH1cblxuICBwdWJsaWMgdHJhY2tCeUluZGV4KGluZGV4OiBudW1iZXIsIGl0ZW06IGFueSk6IG51bWJlciB7XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG4gIHB1YmxpYyB0cmFja0J5SW5kZXhUb0RheU5hbWVzKGluZGV4OiBudW1iZXIsIGl0ZW06IGFueSk6IG51bWJlciB7XG4gICAgcmV0dXJuIGluZGV4O1xuICB9XG5cbiAgcHVibGljIHNldENlbGxBc3BlY3RSYXRpbyhudW1Db2xzOiBudW1iZXIpOiB2b2lkIHtcbiAgICBjb25zdCBwYWRkaW5nID0gKDEwMCAqIHRoaXMuY2VsbEFzcGVjdFJhdGlvKSAvIG51bUNvbHMgLyAyO1xuICAgIHRoaXMuX2NlbGxQYWRkaW5nID0gYCR7cGFkZGluZy50b0ZpeGVkKDIpfSVgO1xuICAgIHRoaXMuX2NlbGxXaWR0aCA9IGAkezEwMCAvIG51bUNvbHN9JWA7XG5cbiAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIHB1YmxpYyBvblByZXZNb250aCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5jdXJyZW50TW9udGggPT09IDEpIHtcbiAgICAgIHRoaXMuY3VycmVudE1vbnRoID0gMTI7XG4gICAgICB0aGlzLmN1cnJlbnRZZWFyLS07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY3VycmVudE1vbnRoLS07XG4gICAgfVxuXG4gICAgdGhpcy5pbml0V2Vla3MoKTtcbiAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIHB1YmxpYyBvbk5leHRNb250aCgpOiB2b2lkIHtcbiAgICBpZiAoKHRoaXMuY3VycmVudE1vbnRoICsgMSkgPT09IDEyKSB7XG4gICAgICB0aGlzLmN1cnJlbnRNb250aCA9IDE7XG4gICAgICB0aGlzLmN1cnJlbnRZZWFyKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY3VycmVudE1vbnRoKys7XG4gICAgfVxuXG4gICAgdGhpcy5pbml0V2Vla3MoKTtcbiAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuXG4gIHB1YmxpYyBpc0RhdGVTZWxlY3RlZChkYXRlVW5peDogbnVtYmVyIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XG4gICAgY29uc3QgaW5pdGlhbERhdGUgPSB0aGlzLmNhbGVuZGFyU2VydmljZS5mb3JtYXRUb1VuaXgodGhpcy5fc3RhcnREYXRlKTtcblxuICAgIHJldHVybiBkYXRlVW5peCA9PT0gaW5pdGlhbERhdGU7XG4gIH1cblxuICBwdWJsaWMgaXNDdXJyZW50RGF0ZShkYXRlVW5peDogbnVtYmVyIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XG4gICAgY29uc3QgY3VycmVudERhdGVUb1VuaXggPSB0aGlzLmNhbGVuZGFyU2VydmljZS5mb3JtYXRUb1VuaXgobmV3IERhdGUoKSk7XG5cbiAgICByZXR1cm4gKGRhdGVVbml4ID8gZGF0ZVVuaXggPT09IGN1cnJlbnREYXRlVG9Vbml4IDogZmFsc2UpO1xuICB9XG5cbiAgcHVibGljIG9uU2VsZWN0ZWREYXRlKG9wdGlvbjogSVdlZWtzKTogdm9pZCB7XG5cbiAgICBzd2l0Y2godGhpcy50eXBlKSB7XG4gICAgICBjYXNlICdzaW5nbGUnOlxuICAgICAgICBjb25zdCBzdGFydERhdGUgPSB0aGlzLmNhbGVuZGFyU2VydmljZS5vblNlbGVjdGVkRGF0ZVNpbmdsZShvcHRpb24/LklTTzg2MDEpO1xuICAgICAgICB0aGlzLl9zdGFydERhdGUgPSBzdGFydERhdGU7XG4gICAgICAgIHRoaXMuZGF0ZVNlbGVjdC5lbWl0KHN0YXJ0RGF0ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmFuZ2UnOlxuICAgICAgICB0aGlzLm9uU2VsZWN0ZWREYXRlUmFuZ2Uob3B0aW9uPy5JU084NjAxKTtcbiAgICAgICAgdGhpcy50b2dnbGVPcHRpb25EYXRlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xuICB9XG5cbiAgcHVibGljIG9uU2VsZWN0ZWREYXRlUmFuZ2UoSVNPODYwMTogc3RyaW5nIHwgdW5kZWZpbmVkKTogdm9pZCB7XG4gICAgc3dpdGNoKHRoaXMuX2N1cnJlbnRPcHRpb25EYXRlKSB7XG4gICAgICBjYXNlICdzdGFydCc6XG4gICAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IHRoaXMuY2FsZW5kYXJTZXJ2aWNlLm9uU2VsZWN0ZWREYXRlU2luZ2xlKElTTzg2MDEpO1xuICAgICAgICB0aGlzLl9zdGFydERhdGUgPSBzdGFydERhdGU7XG4gICAgICAgIHRoaXMuaW5pdFdlZWtzKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgY29uc3QgZW5kRGF0ZSA9IHRoaXMuY2FsZW5kYXJTZXJ2aWNlLm9uU2VsZWN0ZWREYXRlU2luZ2xlKElTTzg2MDEpO1xuICAgICAgICB0aGlzLl9lbmREYXRlID0gZW5kRGF0ZTtcbiAgICAgICAgdGhpcy5pbml0V2Vla3MoKTtcblxuICAgICAgICBpZih0aGlzLnZlcmlmeURhdGVSYW5nZSgpKSB7XG4gICAgICAgICAgdGhpcy5kYXRlUmFuZ2VTZWxlY3QuZW1pdCh7c3RhcnQ6IHRoaXMuX3N0YXJ0RGF0ZSwgZW5kOiB0aGlzLl9lbmREYXRlfSk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaXNFbmREYXRlUmFuZ2UoZGF0ZVVuaXg6IG51bWJlciB8IHVuZGVmaW5lZCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAoXG4gICAgICB0aGlzLl9lbmREYXRlID9cbiAgICAgICAgZGF0ZVVuaXggPT09IHRoaXMuY2FsZW5kYXJTZXJ2aWNlLmZvcm1hdFRvVW5peCh0aGlzLl9lbmREYXRlKSA6XG4gICAgICAgIGZhbHNlXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDdXJyZW50TW9udGgoKTogc3RyaW5nICB7XG4gICAgcmV0dXJuIHRoaXMuYWxsbW9udGghW25ldyBEYXRlKHRoaXMuX3N0YXJ0RGF0ZSB8fCBuZXcgRGF0ZSgpKS5nZXRNb250aCgpXSA/PyAnMCc7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q3VycmVudFllYXIoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhcnREYXRlLmdldEZ1bGxZZWFyKCkgPz8gIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0WWVhck1vbnRoKGRhdGU6IERhdGUpOiB2b2lkIHtcbiAgICBjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuXG4gICAgdGhpcy5jdXJyZW50WWVhciA9IGN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgdGhpcy5jdXJyZW50TW9udGggPSAoY3VycmVudERhdGUuZ2V0TW9udGgoKSArIDEpO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVPcHRpb25EYXRlKCk6IHZvaWQge1xuICAgIGlmKHRoaXMuX2N1cnJlbnRPcHRpb25EYXRlID09PSAnc3RhcnQnKSB7XG4gICAgICBpZih0aGlzLl9lbmREYXRlKSB7XG4gICAgICAgIHRoaXMuX2VuZERhdGUgPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICB0aGlzLl9jdXJyZW50T3B0aW9uRGF0ZSA9ICdlbmQnO1xuICAgIH1lbHNlIHtcbiAgICAgIHRoaXMuaW5pdFdlZWtzKCk7XG4gICAgICB0aGlzLl9jdXJyZW50T3B0aW9uRGF0ZSA9ICdzdGFydCc7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSB2ZXJpZnlEYXRlUmFuZ2UoKTogYm9vbGVhbiB7XG4gICAgaWYoIXRoaXMuX2VuZERhdGUpIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCBzdGFydERhdGVUb1VuaXggPSB0aGlzLmNhbGVuZGFyU2VydmljZVxuICAgICAgLmZvcm1hdFRvVW5peCh0aGlzLl9zdGFydERhdGUpO1xuICAgIGNvbnN0IGVuZERhdGVUb1VuaXggPSB0aGlzLmNhbGVuZGFyU2VydmljZVxuICAgICAgLmZvcm1hdFRvVW5peCh0aGlzLl9lbmREYXRlKTtcblxuICAgIHJldHVybiAhIShlbmREYXRlVG9Vbml4ID49IHN0YXJ0RGF0ZVRvVW5peCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJ1aS1jYWxlbmRhclwiPlxuICA8ZGl2IGNsYXNzPVwidWktY2FsZW5kYXItY29udHJvbHNcIj5cbiAgICA8YnV0dG9uIGFyaWEtbGFiZWw9XCJQcmV2aWV3IE1vbnRoXCIgKGNsaWNrKT1cIm9uUHJldk1vbnRoKClcIj5cbiAgICAgIDxzdmcgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNMTUuODMyNiA0LjE4MDI0QzE2LjA1NTggNC40MjA1NiAxNi4wNTU4IDQuODEwMiAxNS44MzI2IDUuMDUwNTNMOS4zNzk1NSAxMkwxNS44MzI2IDE4Ljk0OTVDMTYuMDU1OCAxOS4xODk4IDE2LjA1NTggMTkuNTc5NCAxNS44MzI2IDE5LjgxOThDMTUuNjA5NSAyMC4wNjAxIDE1LjI0NzcgMjAuMDYwMSAxNS4wMjQ1IDE5LjgxOThMOC4xNjczNyAxMi40MzUxQzcuOTQ0MjEgMTIuMTk0OCA3Ljk0NDIxIDExLjgwNTIgOC4xNjczNyAxMS41NjQ5TDE1LjAyNDUgNC4xODAyNEMxNS4yNDc3IDMuOTM5OTIgMTUuNjA5NSAzLjkzOTkyIDE1LjgzMjYgNC4xODAyNFpcIiBmaWxsPVwiYmxhY2tcIi8+XG4gICAgICA8L3N2Zz5cbiAgICA8L2J1dHRvbj5cbiAgICA8ZGl2IGNsYXNzPVwidWktY2FsZW5kYXItY29udHJvbHMtb3RoZXJzXCI+XG4gICAgICA8YnV0dG9uPnt7IGdldEN1cnJlbnRNb250aCgpIH19PC9idXR0b24+XG4gICAgICA8YnV0dG9uPlxuICAgICAgICB7eyBnZXRDdXJyZW50WWVhcigpIH19XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8YnV0dG9uIGFyaWEtbGFiZWw9XCJOZXh0IE1vbnRoXCIgKGNsaWNrKT1cIm9uTmV4dE1vbnRoKClcIj5cbiAgICAgIDxzdmcgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9XCJldmVub2RkXCIgY2xpcC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNOC4xNjczNyA0LjE4MDI0QzguMzkwNTIgMy45Mzk5MiA4Ljc1MjMzIDMuOTM5OTIgOC45NzU0OSA0LjE4MDI0TDE1LjgzMjYgMTEuNTY0OUMxNS45Mzk4IDExLjY4MDMgMTYgMTEuODM2OCAxNiAxMkMxNiAxMi4xNjMyIDE1LjkzOTggMTIuMzE5NyAxNS44MzI2IDEyLjQzNTFMOC45NzU0OSAxOS44MTk4QzguNzUyMzMgMjAuMDYwMSA4LjM5MDUyIDIwLjA2MDEgOC4xNjczNyAxOS44MTk4QzcuOTQ0MjEgMTkuNTc5NCA3Ljk0NDIxIDE5LjE4OTggOC4xNjczNyAxOC45NDk1TDE0LjYyMDQgMTJMOC4xNjczNyA1LjA1MDUzQzcuOTQ0MjEgNC44MTAyIDcuOTQ0MjEgNC40MjA1NiA4LjE2NzM3IDQuMTgwMjRaXCIgZmlsbD1cImJsYWNrXCIvPlxuICAgICAgPC9zdmc+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuICA8dGFibGUgcm9sZT1cImdyaWRcIiBjbGFzcz1cInVpLWNhbGVuZGFyLXRhYmxlXCI+XG4gICAgPHRoZWFkIGNsYXNzPVwidWktY2FsZW5kYXItdGFibGUtaGVhZFwiPlxuICAgICAgQGlmIChnZXRUcmFuc2xhdGlvbignZGF5TmFtZXNTaG9ydCcpKSB7XG4gICAgICAgIDx0cj5cbiAgICAgICAgICBAZm9yIChuYW1lIG9mIGdldFRyYW5zbGF0aW9uKCdkYXlOYW1lc1Nob3J0Jyk7IGxldCBpZHggPSAkaW5kZXg7IHRyYWNrIHRyYWNrQnlJbmRleFRvRGF5TmFtZXM7KSB7XG4gICAgICAgICAgICA8dGggc2NvcGU9XCJjb2xcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ2aXN1YWxseS1oaWRkZW5cIj4ge3sgZ2V0RGF5TmFtZShpZHgpIHwgdGl0bGVjYXNlIH19IDwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+e3sgbmFtZSB8IHVwcGVyY2FzZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgfVxuICAgICAgICA8L3RyPlxuICAgICAgfVxuICAgIDwvdGhlYWQ+XG4gICAgPHRib2R5IGNsYXNzPVwidWktY2FsZW5kYXItdGFibGUtYm9keVwiPlxuICAgICAgQGZvciAod2VlayBvZiB3ZWVrcyB8IGFzeW5jOyBsZXQgaWR4ID0gJGluZGV4OyB0cmFjayB0cmFja0J5SW5kZXg7KSB7XG4gICAgICA8dHIgcm9sZT1cInJvd1wiPlxuICAgICAgICBAZm9yIChkYXkgb2Ygd2VlazsgdHJhY2sgZGF5LklTTzg2MDEpIHtcbiAgICAgICAgICA8dGRcbiAgICAgICAgICAgIHJvbGU9XCJncmlkY2VsbFwiXG4gICAgICAgICAgICBbc3R5bGUud2lkdGhdPVwiX2NlbGxXaWR0aFwiXG4gICAgICAgICAgICBbc3R5bGUucGFkZGluZ1RvcF09XCJfY2VsbFBhZGRpbmdcIlxuICAgICAgICAgICAgW3N0eWxlLnBhZGRpbmdCb3R0b21dPVwiX2NlbGxQYWRkaW5nXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgcm9sZT1cIm9wdGlvblwiXG4gICAgICAgICAgICAgIFtjbGFzcy5yZWFkb25seV09XCJkYXkuaXNBbm90aGVyTW9udGhcIlxuICAgICAgICAgICAgICBbYXR0ci5kaXNhYmxlZF09XCJkYXkuaXNBbm90aGVyTW9udGggfHwgbnVsbFwiXG4gICAgICAgICAgICAgIFtjbGFzcy5yYW5nZV09XCJkYXkuaXNTZWxlY3RlZCAmJiBfZW5kRGF0ZSAmJiB0eXBlID09PSAncmFuZ2UnXCJcbiAgICAgICAgICAgICAgW2NsYXNzLmVuZC1kYXRlXT1cImlzRW5kRGF0ZVJhbmdlKGRheS51bml4KVwiXG4gICAgICAgICAgICAgIFthdHRyLnRhYkluZGV4XT1cImRheS5pc0Fub3RoZXJNb250aCA/IC0xIDogMFwiXG4gICAgICAgICAgICAgIFthdHRyLmFyaWEtY3VycmVudF09XCJpc1NlbGVjdEN1cnJlbnREYXkgJiYgdHlwZSA9PT0gJ3NpbmdsZScgPyAoaXNDdXJyZW50RGF0ZShkYXkudW5peCkgPyAnZGF0ZScgOiBudWxsKSA6IG51bGxcIlxuICAgICAgICAgICAgICBbYXR0ci5hcmlhLXNlbGVjdGVkXT1cImlzRGF0ZVNlbGVjdGVkKGRheS51bml4KVwiXG4gICAgICAgICAgICAgIFthdHRyLmRhdGEtZGF0ZV09XCJkYXkuSVNPODYwMSB8fCBudWxsXCJcbiAgICAgICAgICAgICAgKGNsaWNrKT1cIm9uU2VsZWN0ZWREYXRlKGRheSlcIj5cbiAgICAgICAgICAgICAge3sgZGF5LmRheSB9fVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC90ZD5cbiAgICAgICAgfVxuICAgICAgPC90cj5cbiAgICAgIH1cbiAgICA8L3Rib2R5PlxuICA8L3RhYmxlPlxuPC9kaXY+XG4iXX0=