import { booleanAttribute, ChangeDetectionStrategy, Component, EventEmitter, inject, Input, Output, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CoreManjonUI } from '../../../config/core.config';
import * as i0 from "@angular/core";
import * as i1 from "./calendar.service";
import * as i2 from "@angular/common";
export class UICalendarComponent {
    set startDate(start) {
        const startDate = new Date(start);
        startDate.setHours(0, 0, 0, 0);
        this._startDate = startDate;
        this.cdr.markForCheck();
    }
    ;
    set endDate(end) {
        const endDate = new Date(end);
        endDate.setHours(0, 0, 0, 0);
        this._endDate = endDate;
        this.cdr.markForCheck();
    }
    constructor(cdr, calendarService) {
        this.cdr = cdr;
        this.calendarService = calendarService;
        this.type = 'single';
        this.locale = 'es-ES';
        this.cellAspectRatio = 1;
        this.isShowDaysOtherMonth = true;
        this.dateSelect = new EventEmitter();
        this.dateRangeSelect = new EventEmitter();
        this.dateMultipleSelect = new EventEmitter();
        this.config = inject(CoreManjonUI);
        this.currentDate = new Date();
        this._currentOptionDate = 'start';
        this.allmonth = this.config.getTranslation(this.locale, 'monthNames');
    }
    ngOnInit() {
        const date = this._startDate || new Date();
        this.setYearMonth(date);
        this.initWeeks();
        this.weeks = this.calendarService.initWeeks$;
        this.getDayNames();
    }
    getDayNames() {
        const dayNames = this.config
            .getTranslation(this.locale, 'dayNames');
        if (Array.isArray(dayNames)) {
            this.dayNames = dayNames;
        }
    }
    ngOnChanges(changes) {
        if (changes['type'] && (changes['type'].previousValue !== changes['type'].currentValue)) {
            this.initWeeks();
        }
        if (changes['endDate'] && (changes['endDate'].previousValue !== changes['endDate'].currentValue)) {
            const endDate = new Date(changes['endDate'].currentValue);
            endDate.setHours(0, 0, 0, 0);
            this._endDate = endDate;
            this.setYearMonth(endDate);
            this.initWeeks();
        }
        if (changes['startDate'] && (changes['startDate'].previousValue !== changes['startDate'].currentValue)) {
            const startDate = new Date(changes['startDate'].currentValue);
            startDate.setHours(0, 0, 0, 0);
            this._startDate = startDate;
            this.setYearMonth(startDate);
            this.initWeeks();
        }
        if (changes['locale'] && (changes['locale'].previousValue !== changes['locale'].currentValue)) {
            this.getDayNames();
            this.allmonth = this.config.getTranslation(this.locale, 'monthNames');
        }
    }
    ngOnDestroy() {
        if (this._subscriptionWeeks) {
            this._subscriptionWeeks.unsubscribe();
        }
    }
    getDayName(index) {
        return this.dayNames[index];
    }
    getTranslation(key) {
        return this.config.getTranslation(this.locale, key);
    }
    initWeeks() {
        this.calendarService
            .decomposeMonthIntoWeeks(this.currentYear, this.currentMonth, this.type, this.isShowDaysOtherMonth, this._startDate, this._endDate);
    }
    trackByIndex(index, item) {
        return index;
    }
    trackByIndexToDayNames(index, item) {
        return index;
    }
    setCellAspectRatio(numCols) {
        const padding = (100 * this.cellAspectRatio) / numCols / 2;
        this._cellPadding = `${padding.toFixed(2)}%`;
        this._cellWidth = `${100 / numCols}%`;
        this.cdr.markForCheck();
    }
    onPrevMonth() {
        if (this.currentMonth === 1) {
            this.currentMonth = 12;
            this.currentYear--;
        }
        else {
            this.currentMonth--;
        }
        this.initWeeks();
        this.cdr.markForCheck();
    }
    onNextMonth() {
        if ((this.currentMonth + 1) === 12) {
            this.currentMonth = 1;
            this.currentYear++;
        }
        else {
            this.currentMonth++;
        }
        this.initWeeks();
        this.cdr.markForCheck();
    }
    isDateSelected(dateUnix) {
        const initialDate = this.calendarService.formatToUnix(this._startDate);
        return dateUnix === initialDate;
    }
    isCurrentDate(dateUnix) {
        const currentDateToUnix = this.calendarService.formatToUnix(new Date());
        return (dateUnix ? dateUnix === currentDateToUnix : false);
    }
    onSelectedDate(option) {
        switch (this.type) {
            case 'single':
                const startDate = this.calendarService.onSelectedDateSingle(option?.ISO8601);
                this._startDate = startDate;
                this.dateSelect.emit(startDate);
                break;
            case 'range':
                this.onSelectedDateRange(option?.ISO8601);
                this.toggleOptionDate();
                break;
        }
        this.cdr.markForCheck();
    }
    onSelectedDateRange(ISO8601) {
        switch (this._currentOptionDate) {
            case 'start':
                const startDate = this.calendarService.onSelectedDateSingle(ISO8601);
                this._startDate = startDate;
                this.initWeeks();
                break;
            case 'end':
                const endDate = this.calendarService.onSelectedDateSingle(ISO8601);
                this._endDate = endDate;
                this.initWeeks();
                if (this.verifyDateRange()) {
                    this.dateRangeSelect.emit({ start: this._startDate, end: this._endDate });
                }
                break;
        }
    }
    isEndDateRange(dateUnix) {
        return (this._endDate ?
            dateUnix === this.calendarService.formatToUnix(this._endDate) :
            false);
    }
    getCurrentMonth() {
        return this.allmonth[new Date(this._startDate || new Date()).getMonth()] ?? '0';
    }
    getCurrentYear() {
        return this._startDate.getFullYear() ?? new Date().getFullYear();
    }
    setYearMonth(date) {
        const currentDate = new Date(date);
        this.currentYear = currentDate.getFullYear();
        this.currentMonth = (currentDate.getMonth() + 1);
    }
    toggleOptionDate() {
        if (this._currentOptionDate === 'start') {
            if (this._endDate) {
                this._endDate = undefined;
            }
            this._currentOptionDate = 'end';
        }
        else {
            this.initWeeks();
            this._currentOptionDate = 'start';
        }
    }
    verifyDateRange() {
        if (!this._endDate)
            return false;
        const startDateToUnix = this.calendarService
            .formatToUnix(this._startDate);
        const endDateToUnix = this.calendarService
            .formatToUnix(this._endDate);
        return !!(endDateToUnix >= startDateToUnix);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICalendarComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.CalendarService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.12", type: UICalendarComponent, isStandalone: true, selector: "ui-calendar", inputs: { startDate: "startDate", endDate: "endDate", type: "type", locale: "locale", limitYearsPreview: "limitYearsPreview", cellAspectRatio: "cellAspectRatio", isShowDaysOtherMonth: ["isShowDaysOtherMonth", "isShowDaysOtherMonth", booleanAttribute], isResponsive: ["isResponsive", "isResponsive", booleanAttribute], isSelectable: ["isSelectable", "isSelectable", booleanAttribute], isSelectCurrentDay: ["isSelectCurrentDay", "isSelectCurrentDay", booleanAttribute] }, outputs: { dateSelect: "dateSelect", dateRangeSelect: "dateRangeSelect", dateMultipleSelect: "dateMultipleSelect" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"ui-calendar\">\n  <div class=\"ui-calendar-controls\">\n    <button aria-label=\"Preview Month\" (click)=\"onPrevMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.8326 4.18024C16.0558 4.42056 16.0558 4.8102 15.8326 5.05053L9.37955 12L15.8326 18.9495C16.0558 19.1898 16.0558 19.5794 15.8326 19.8198C15.6095 20.0601 15.2477 20.0601 15.0245 19.8198L8.16737 12.4351C7.94421 12.1948 7.94421 11.8052 8.16737 11.5649L15.0245 4.18024C15.2477 3.93992 15.6095 3.93992 15.8326 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n    <div class=\"ui-calendar-controls-others\">\n      <button>{{ getCurrentMonth() }}</button>\n      <button>\n        {{ getCurrentYear() }}\n      </button>\n    </div>\n    <button aria-label=\"Next Month\" (click)=\"onNextMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.16737 4.18024C8.39052 3.93992 8.75233 3.93992 8.97549 4.18024L15.8326 11.5649C15.9398 11.6803 16 11.8368 16 12C16 12.1632 15.9398 12.3197 15.8326 12.4351L8.97549 19.8198C8.75233 20.0601 8.39052 20.0601 8.16737 19.8198C7.94421 19.5794 7.94421 19.1898 8.16737 18.9495L14.6204 12L8.16737 5.05053C7.94421 4.8102 7.94421 4.42056 8.16737 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n  </div>\n  <table role=\"grid\" class=\"ui-calendar-table\">\n    <thead class=\"ui-calendar-table-head\">\n      @if (getTranslation('dayNamesShort')) {\n        <tr>\n          @for (name of getTranslation('dayNamesShort'); let idx = $index; track trackByIndexToDayNames;) {\n            <th scope=\"col\">\n              <span class=\"visually-hidden\"> {{ getDayName(idx) | titlecase }} </span>\n              <span aria-hidden=\"true\">{{ name | uppercase }}</span>\n            </th>\n          }\n        </tr>\n      }\n    </thead>\n    <tbody class=\"ui-calendar-table-body\">\n      @for (week of weeks | async; let idx = $index; track trackByIndex;) {\n      <tr role=\"row\">\n        @for (day of week; track day.ISO8601) {\n          <td\n            role=\"gridcell\"\n            [style.width]=\"_cellWidth\"\n            [style.paddingTop]=\"_cellPadding\"\n            [style.paddingBottom]=\"_cellPadding\"\n            >\n            <button\n              role=\"option\"\n              [class.readonly]=\"day.isAnotherMonth\"\n              [attr.disabled]=\"day.isAnotherMonth || null\"\n              [class.range]=\"day.isSelected && _endDate && type === 'range'\"\n              [class.end-date]=\"isEndDateRange(day.unix)\"\n              [attr.tabIndex]=\"day.isAnotherMonth ? -1 : 0\"\n              [attr.aria-current]=\"isSelectCurrentDay && type === 'single' ? (isCurrentDate(day.unix) ? 'date' : null) : null\"\n              [attr.aria-selected]=\"isDateSelected(day.unix)\"\n              [attr.data-date]=\"day.ISO8601 || null\"\n              (click)=\"onSelectedDate(day)\">\n              {{ day.day }}\n            </button>\n          </td>\n        }\n      </tr>\n      }\n    </tbody>\n  </table>\n</div>\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;left:0}.ui-calendar{width:280px;border:1px solid #DEDEDE;padding:4px 0;border-radius:4px}.ui-calendar-controls{display:flex;align-items:center;justify-content:space-between;padding:.24rem .75rem}.ui-calendar-controls button{height:max-content;display:flex;align-items:center;justify-content:center}.ui-calendar-controls button:focus{border-radius:8px;outline-offset:2px;outline:1px solid red}.ui-calendar-controls-others{display:flex;gap:.25rem}.ui-calendar-controls-others button{font:inherit;font-size:14px;line-height:16px}.ui-calendar-table{width:100%;border-collapse:collapse;table-layout:fixed}.ui-calendar-table-head{margin-bottom:1rem;border-bottom:1px solid #DEDEDE}.ui-calendar-table-head th{-webkit-user-select:none;user-select:none}.ui-calendar-table-head th:hover{cursor:default}.ui-calendar-table-head th span{font-weight:500;font-size:12px;line-height:14px}.ui-calendar-table-body tr{margin:0;padding:0;height:0;position:relative;text-align:center}.ui-calendar-table-body tr td button{width:100%;height:auto;display:flex;align-items:center;justify-content:center;margin:0;padding:0;aspect-ratio:1;font-weight:500;font-size:14px;line-height:16px;margin:.15rem 0;color:var(--grayscale-black)}.ui-calendar-table-body tr td button:focus{border-radius:999px;outline:1px solid var(--corporate-purple)}.ui-calendar-table-body tr td button.range{background-color:var(--corporate-purple);color:var(--grayscale-white)}.ui-calendar-table-body tr td button.range:is([aria-selected=true]){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button.range:is(.ui-calendar-table-body tr td button.end-date){border-radius:0 999px 999px 0}.ui-calendar-table-body tr td button[aria-selected=true]:has(.ui-calendar-table-body tr td button.range){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button[aria-current]):not(.ui-calendar-table-body tr td button.range):hover{border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button[aria-current]{background-color:var(--corporate-purple);color:var(--grayscale-white);border-radius:999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button.range):is(.ui-calendar-table-body tr td button[aria-selected=true]){border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button.readonly{font-weight:400;color:#707070;pointer-events:none}.ui-calendar-table-body tr td button.readonly:hover{cursor:default}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.UpperCasePipe, name: "uppercase" }, { kind: "pipe", type: i2.TitleCasePipe, name: "titlecase" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: UICalendarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ui-calendar', standalone: true, imports: [
                        CommonModule,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<div class=\"ui-calendar\">\n  <div class=\"ui-calendar-controls\">\n    <button aria-label=\"Preview Month\" (click)=\"onPrevMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.8326 4.18024C16.0558 4.42056 16.0558 4.8102 15.8326 5.05053L9.37955 12L15.8326 18.9495C16.0558 19.1898 16.0558 19.5794 15.8326 19.8198C15.6095 20.0601 15.2477 20.0601 15.0245 19.8198L8.16737 12.4351C7.94421 12.1948 7.94421 11.8052 8.16737 11.5649L15.0245 4.18024C15.2477 3.93992 15.6095 3.93992 15.8326 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n    <div class=\"ui-calendar-controls-others\">\n      <button>{{ getCurrentMonth() }}</button>\n      <button>\n        {{ getCurrentYear() }}\n      </button>\n    </div>\n    <button aria-label=\"Next Month\" (click)=\"onNextMonth()\">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.16737 4.18024C8.39052 3.93992 8.75233 3.93992 8.97549 4.18024L15.8326 11.5649C15.9398 11.6803 16 11.8368 16 12C16 12.1632 15.9398 12.3197 15.8326 12.4351L8.97549 19.8198C8.75233 20.0601 8.39052 20.0601 8.16737 19.8198C7.94421 19.5794 7.94421 19.1898 8.16737 18.9495L14.6204 12L8.16737 5.05053C7.94421 4.8102 7.94421 4.42056 8.16737 4.18024Z\" fill=\"black\"/>\n      </svg>\n    </button>\n  </div>\n  <table role=\"grid\" class=\"ui-calendar-table\">\n    <thead class=\"ui-calendar-table-head\">\n      @if (getTranslation('dayNamesShort')) {\n        <tr>\n          @for (name of getTranslation('dayNamesShort'); let idx = $index; track trackByIndexToDayNames;) {\n            <th scope=\"col\">\n              <span class=\"visually-hidden\"> {{ getDayName(idx) | titlecase }} </span>\n              <span aria-hidden=\"true\">{{ name | uppercase }}</span>\n            </th>\n          }\n        </tr>\n      }\n    </thead>\n    <tbody class=\"ui-calendar-table-body\">\n      @for (week of weeks | async; let idx = $index; track trackByIndex;) {\n      <tr role=\"row\">\n        @for (day of week; track day.ISO8601) {\n          <td\n            role=\"gridcell\"\n            [style.width]=\"_cellWidth\"\n            [style.paddingTop]=\"_cellPadding\"\n            [style.paddingBottom]=\"_cellPadding\"\n            >\n            <button\n              role=\"option\"\n              [class.readonly]=\"day.isAnotherMonth\"\n              [attr.disabled]=\"day.isAnotherMonth || null\"\n              [class.range]=\"day.isSelected && _endDate && type === 'range'\"\n              [class.end-date]=\"isEndDateRange(day.unix)\"\n              [attr.tabIndex]=\"day.isAnotherMonth ? -1 : 0\"\n              [attr.aria-current]=\"isSelectCurrentDay && type === 'single' ? (isCurrentDate(day.unix) ? 'date' : null) : null\"\n              [attr.aria-selected]=\"isDateSelected(day.unix)\"\n              [attr.data-date]=\"day.ISO8601 || null\"\n              (click)=\"onSelectedDate(day)\">\n              {{ day.day }}\n            </button>\n          </td>\n        }\n      </tr>\n      }\n    </tbody>\n  </table>\n</div>\n", styles: ["@import\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\";:root{--font-family: \"Poppins\", sans-serif;--font-size: 16px;--line-height: 1.5;--corporate-purple: #9D3FE7;--corporate-gradient: 159.13deg, #9D3FE7 -24.13%, #602093 132.21%;--grayscale-black: #1A141F;--grayscale-white: #FFFFFF;--grayscale-hint-text: #4B3A5A;--grayscale-border: #ABA7AF;--grayscale-disabled: #D4D2D5;--grayscale-spacer: #D9D1E0;--grayscale-spacer-light: #E5E0EB;--grayscale-bg-light-grey: #F5F3F7;--informing-error: #D51A52;--informing-attention: #FF9500;--informing-approval: #00B998;--informing-link: #0F0BAB}*,*:before,*:after{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}main{height:max-content}body{font-family:var(--font-family);font-size:var(--font-size);line-height:var(--line-height);min-height:100vh;vertical-align:middle}a{text-decoration:none}ul{padding:0;list-style:none}input[type=\"*\"]{outline:none;border:none;font-family:inherit;font-size:inherit}img{display:inline-block;max-width:100%}button{border:none;outline:none;background-color:transparent}@keyframes collapseAnimation{0%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}99%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}to{clip-path:polygon(0 0,100% 0,100% 0,0 0)}}@keyframes expandAnimation{0%{clip-path:polygon(0 0,100% 0,100% 0,0 0)}99%{clip-path:polygon(0 0,100% 0,100% 100%,0% 100%)}to{clip-path:none}}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;left:0}.ui-calendar{width:280px;border:1px solid #DEDEDE;padding:4px 0;border-radius:4px}.ui-calendar-controls{display:flex;align-items:center;justify-content:space-between;padding:.24rem .75rem}.ui-calendar-controls button{height:max-content;display:flex;align-items:center;justify-content:center}.ui-calendar-controls button:focus{border-radius:8px;outline-offset:2px;outline:1px solid red}.ui-calendar-controls-others{display:flex;gap:.25rem}.ui-calendar-controls-others button{font:inherit;font-size:14px;line-height:16px}.ui-calendar-table{width:100%;border-collapse:collapse;table-layout:fixed}.ui-calendar-table-head{margin-bottom:1rem;border-bottom:1px solid #DEDEDE}.ui-calendar-table-head th{-webkit-user-select:none;user-select:none}.ui-calendar-table-head th:hover{cursor:default}.ui-calendar-table-head th span{font-weight:500;font-size:12px;line-height:14px}.ui-calendar-table-body tr{margin:0;padding:0;height:0;position:relative;text-align:center}.ui-calendar-table-body tr td button{width:100%;height:auto;display:flex;align-items:center;justify-content:center;margin:0;padding:0;aspect-ratio:1;font-weight:500;font-size:14px;line-height:16px;margin:.15rem 0;color:var(--grayscale-black)}.ui-calendar-table-body tr td button:focus{border-radius:999px;outline:1px solid var(--corporate-purple)}.ui-calendar-table-body tr td button.range{background-color:var(--corporate-purple);color:var(--grayscale-white)}.ui-calendar-table-body tr td button.range:is([aria-selected=true]){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button.range:is(.ui-calendar-table-body tr td button.end-date){border-radius:0 999px 999px 0}.ui-calendar-table-body tr td button[aria-selected=true]:has(.ui-calendar-table-body tr td button.range){border-radius:999px 0 0 999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button[aria-current]):not(.ui-calendar-table-body tr td button.range):hover{border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button[aria-current]{background-color:var(--corporate-purple);color:var(--grayscale-white);border-radius:999px}.ui-calendar-table-body tr td button:not(.ui-calendar-table-body tr td button[disabled]):not(.ui-calendar-table-body tr td button.range):is(.ui-calendar-table-body tr td button[aria-selected=true]){border-radius:999px;border:1px solid var(--corporate-purple);background-color:#9e3fe731;cursor:pointer}.ui-calendar-table-body tr td button.readonly{font-weight:400;color:#707070;pointer-events:none}.ui-calendar-table-body tr td button.readonly:hover{cursor:default}\n"] }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.CalendarService }], propDecorators: { startDate: [{
                type: Input
            }], endDate: [{
                type: Input
            }], type: [{
                type: Input
            }], locale: [{
                type: Input
            }], limitYearsPreview: [{
                type: Input
            }], cellAspectRatio: [{
                type: Input
            }], isShowDaysOtherMonth: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isResponsive: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isSelectable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], isSelectCurrentDay: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], dateSelect: [{
                type: Output
            }], dateRangeSelect: [{
                type: Output
            }], dateMultipleSelect: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,