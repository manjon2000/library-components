{"version":3,"file":"manjon-ui.mjs","sources":["../../../projects/manjon-ui/src/lib/shared/directives/focus-blur.directive.ts","../../../projects/manjon-ui/src/lib/components/radiobutton/radiobutton.component.ts","../../../projects/manjon-ui/src/lib/components/radiobutton/radiobutton.component.html","../../../projects/manjon-ui/src/lib/components/toggler/toggler.component.ts","../../../projects/manjon-ui/src/lib/components/toggler/toggler.component.html","../../../projects/manjon-ui/src/lib/components/input-search/input-search.component.ts","../../../projects/manjon-ui/src/lib/components/input-search/input-search.component.html","../../../projects/manjon-ui/src/lib/components/input-search/option/option.component.ts","../../../projects/manjon-ui/src/lib/components/input-search/option/option.component.html","../../../projects/manjon-ui/src/lib/components/option-group/option-group.component.ts","../../../projects/manjon-ui/src/lib/components/option-group/option-group.component.html","../../../projects/manjon-ui/src/lib/components/checkbox/checkbox.component.ts","../../../projects/manjon-ui/src/lib/components/checkbox/checkbox.component.html","../../../projects/manjon-ui/src/lib/components/tree-view/tree-view.component.ts","../../../projects/manjon-ui/src/lib/components/tree-view/tree-view.component.html","../../../projects/manjon-ui/src/public-api.ts","../../../projects/manjon-ui/src/manjon-ui.ts"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Output } from \"@angular/core\";\n\n@Directive({\n    selector: '[focusBlur]',\n    standalone: true,\n})\nexport class FocusBlurDirective {\n    @Output() onFocus: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor(\n        private el: ElementRef\n    ) {}\n\n    @HostListener('focus') focus() {\n        this.onFocus.emit()\n    }\n\n    @HostListener('blur') blur() {\n        this.onBlur.emit();\n      }\n}","import { ChangeDetectorRef, Component, ElementRef, forwardRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FocusBlurDirective } from '../../shared/directives/focus-blur.directive';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ui-radiobutton',\n  standalone: true,\n  imports: [\n    FocusBlurDirective\n  ],\n  templateUrl: './radiobutton.component.html',\n  styleUrl: './radiobutton.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => UIRadiobuttonComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UIRadiobuttonComponent implements ControlValueAccessor {\n\n  @ViewChild('input', { static: true }) inputRadio!: ElementRef;\n\n  @Input() label!: string;\n  @Input() isChecked!: boolean;\n  @Input() isDisabled!: boolean;\n  @Input() isError!: boolean;\n  @Input() ariaLabel!: string;\n\n  public onChangeCallback?: (checked: boolean) => void;\n  private _value!: boolean;\n\n  constructor(\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  onInput(event: Event): void {\n    const { checked } = (event.currentTarget) as HTMLInputElement\n   \n    this._value = checked;\n    this.onChangeCallback?.(checked);\n\n    this.cdr.markForCheck();\n  }\n\n  writeValue(checked: boolean): void {\n    this._value = checked;\n  }\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any): void {\n    throw new Error('Method not implemented.');\n  }\n\n  public onFocus(): void {\n    console.log('FOCUS!!!')\n  }\n\n  public onBlur(): void {\n    console.log('BLUR!!!')\n  }\n}\n","<div class=\"ui-radiobutton\">\n    <input \n        #input\n        focusBlur\n        id=\"radio1\"\n        class=\"ui-radiobutton-input\"\n        type=\"radio\"\n        [checked]=\"isChecked\"\n        [disabled]=\"isDisabled\"\n        [attr.aria-invalid]=\"isError\"\n        [attr.aria-label]=\"ariaLabel\"\n        (input)=\"onInput($event)\"\n        (onFocus)=\"onFocus()\"\n        (onBlur)=\"onBlur()\"s\n    />\n    <label for=\"radio1\" class=\"ui-radiobutton-label\">{{label}}</label>\n</div>","import { ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'ui-toggler',\n  standalone: true,\n  imports: [],\n  templateUrl: './toggler.component.html',\n  styleUrl: './toggler.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UITogglerComponent {\n\n  @Input() isActived!: boolean;\n  @Input() isDisabled!: boolean;\n  @Input() ariaLabel!: string;\n  @Input() ariaLabelledby!: string;\n\n  @Output() outputEvent: EventEmitter<boolean> = new  EventEmitter<boolean>();\n\n  constructor(\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  public onToggle() {\n    this.isActived = !this.isActived;\n    this.outputEvent.emit(this.isActived);\n    this.cdr.markForCheck();\n  }\n\n}\n","<button \n    type=\"button\" \n    class=\"ui-toggler\" \n    [class.ui-toggler--active]=\"isActived\"\n    [disabled]=\"isDisabled\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-disabled]=\"isDisabled\"\n    (click)=\"onToggle()\"\n></button>\n","import { AfterContentInit, AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component , ElementRef, EventEmitter, HostListener, Input, OnDestroy, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FocusBlurDirective } from '../../shared/directives/focus-blur.directive';\nimport { CommonModule } from '@angular/common';\nimport { IUIOptionGroupOptionConfiguration, UIOptionGroupComponent } from '../option-group/option-group.component';\nimport { distinctUntilChanged, filter, Subject, takeUntil } from 'rxjs';\n\n// AÃ±adir NGvalue_ACCESSOR y al componente UIOptionGroupComponent\n\n@Component({\n  selector: 'ui-input-search',\n  standalone: true,\n  imports: [\n    FocusBlurDirective,\n    CommonModule\n  ],\n  templateUrl: './input-search.component.html',\n  styleUrl: './input-search.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UIInputSearchComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n\n  @ViewChild('container', { static: true }) container!: ElementRef;\n  @ViewChild('panel', { static: false }) panel!: ElementRef;\n\n  @Input() panelSuggestions!: UIOptionGroupComponent | null;\n\n  @Input() placeholder!: string;\n  @Input() isShowSuggestions: boolean = true;\n\n  @Output() outputWriteInput: EventEmitter<string> = new EventEmitter<string>();\n  @Output() outputSuggestions: EventEmitter<IUIOptionGroupOptionConfiguration> = new EventEmitter<IUIOptionGroupOptionConfiguration>(); \n\n  public isFocusin: boolean = false;\n  public isShowPanel: boolean = false;\n  public value: string = '';\n\n  private _unsubcribes$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    if (\n      this.container?.nativeElement &&\n      this.panel?.nativeElement &&\n      this.isShowSuggestions\n    ) {\n      this.adjustPositionPanel(\n        this.container.nativeElement,\n        this.panel?.nativeElement\n      );\n    }\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    if (!this.container?.nativeElement.contains(event.target)) {\n      if (this.isShowSuggestions) {\n        this.isShowPanel = false;\n      }\n\n      this.isFocusin = false;\n      this.cdr.markForCheck();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if(this.panelSuggestions) {\n      this.panelSuggestions.outputSelected\n      .pipe(\n        filter((value) => value !== undefined),\n        //distinctUntilChanged(),\n        takeUntil(this._unsubcribes$)\n      )\n      .subscribe((options: IUIOptionGroupOptionConfiguration) => {\n        this.value = options?.value;\n        this.isFocusin = false;\n        this.isShowPanel = false;\n        this.outputSuggestions.emit(options);\n      });\n    }\n  }\n\n  ngAfterContentInit(): void {\n    if (\n      this.container?.nativeElement &&\n      this.panel?.nativeElement &&\n      this.isShowSuggestions\n    ) {\n      this.adjustPositionPanel(\n        this.container.nativeElement,\n        this.panel?.nativeElement\n      );\n    }\n    this.cdr.markForCheck();\n  }\n\n  ngAfterViewChecked(): void {\n    if (\n      this.container?.nativeElement &&\n      this.panel?.nativeElement &&\n      this.isShowSuggestions\n    ) {\n      this.adjustPositionPanel(\n        this.container.nativeElement,\n        this.panel?.nativeElement\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._unsubcribes$.next();\n    this._unsubcribes$.complete();\n  }\n\n  public onInput(event: Event) {\n    const { value } = (event.currentTarget) as HTMLInputElement;\n\n    this.value = value;\n    this.outputWriteInput.emit(this.value);\n\n    this.cdr.markForCheck();\n\n  }\n\n  public onFocus() {\n    this.isFocusin = true;\n  }\n\n  public onBlur() {\n    this.isFocusin = false;\n  }\n\n  private adjustPositionPanel(container: HTMLElement, panel: HTMLElement) {\n    if (!container || !panel) {\n      console.warn('Container or panel is not available');\n      return;\n    }\n\n    const { width, top, left, height } = container.getBoundingClientRect();\n\n    panel.style.position = 'fixed';\n    panel.style.width = `${width}px`;\n    panel.style.top = `${top + height}px`;\n    panel.style.left = `${left}px`;\n\n    this.cdr.markForCheck();\n  }\n\n}\n","<div \n    #container \n    class=\"ui-input-search\" \n    [class.ui-input-search--expand]=\"(isShowSuggestions && value.length !== 0) && (isShowPanel || isFocusin)\">\n    <input \n        #input \n        focusBlur\n        [value]=\"value\"\n        (input)=\"onInput($event)\"\n        (onFocus)=\"onFocus()\"\n        (onBlur)=\"onBlur()\" \n        type=\"search\"\n        placeholder=\"Buscar modelos\"\n    />\n    <div class=\"ui-input-search__wrapper\">\n        <svg class=\"ui-input-search-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.8424 17.684C12.3605 17.6837 13.8349 17.1755 15.0307 16.2403L18.7906 20L20 18.7907L16.2401 15.031C17.1758 13.8351 17.6844 12.3604 17.6847 10.842C17.6847 7.06949 14.6151 4 10.8424 4C7.06965 4 4 7.06949 4 10.842C4 14.6145 7.06965 17.684 10.8424 17.684ZM10.8424 5.7105C13.6725 5.7105 15.9741 8.01197 15.9741 10.842C15.9741 13.672 13.6725 15.9735 10.8424 15.9735C8.01219 15.9735 5.71059 13.672 5.71059 10.842C5.71059 8.01197 8.01219 5.7105 10.8424 5.7105Z\" fill=\"currentColor\"/>\n            <path d=\"M12.05 9.6327C12.3742 9.95769 12.5529 10.387 12.5529 10.842H14.2635C14.2643 10.3925 14.1759 9.94734 14.0036 9.53219C13.8312 9.11705 13.5783 8.74018 13.2594 8.42337C11.9645 7.13024 9.71935 7.13024 8.42529 8.42337L9.63297 9.63441C10.283 8.98613 11.4034 8.98784 12.05 9.6327Z\" fill=\"currentColor\"/>\n        </svg>\n    </div>\n    <ng-container *ngIf=\"isShowSuggestions\">\n        <div \n            #panel \n            class=\"ui-input-search__panel\" \n            [class.ui-input-search__panel--expand]=\"value.length !== 0 && (isShowPanel || isFocusin)\" \n            role=\"listbox\">\n            <ng-content></ng-content>\n        </div>\n    </ng-container>\n</div>  ","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'ui-option',\n  standalone: true,\n  imports: [],\n  templateUrl: './option.component.html',\n  styleUrl: './option.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UIOptionComponent {\n\n  @Input() title!: string;\n  @Input() isActive: boolean = false;\n  @Input() isDisabled: boolean = false;\n  \n  @Output() outputemit: EventEmitter<string> = new EventEmitter<string>();\n\n  public onClick() {\n    this.outputemit.emit(this.title);\n  }\n}\n","<button \n    class=\"ui-option\" \n    type=\"button\" \n    [class.ui-option--active]=\"isActive\"\n    [disabled]=\"isDisabled\"\n    [attr.aria-disabled]=\"isDisabled\"\n    (click)=\"onClick()\"\n>\n    {{title}}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { UIOptionComponent } from '../input-search/option/option.component';\n\nexport interface IUIOptionGroupConfiguration {\n  // @TODO add checkbox\n  multiSelected?: boolean\n  itemsAboveScroll?: number\n}\n\nexport interface IUIOptionGroupOptionConfiguration {\n  // @TODO Add icons\n  id: string | number;\n  value: string;\n  disabled: boolean;\n  icon?: string;\n  iconAlignment?: 'left' | 'right'\n}\n\n@Component({\n  selector: 'ui-option-group',\n  standalone: true,\n  imports: [\n    CommonModule,\n    UIOptionComponent\n  ],\n  templateUrl: './option-group.component.html',\n  styleUrl: './option-group.component.scss'\n})\nexport class UIOptionGroupComponent implements OnChanges {\n\n  @Input() config!: IUIOptionGroupConfiguration;\n  @Input() options!: IUIOptionGroupOptionConfiguration[];\n  \n  @Output() outputSelected: EventEmitter<IUIOptionGroupOptionConfiguration> = new EventEmitter<IUIOptionGroupOptionConfiguration>()\n  @Output() outputMultiSelected: EventEmitter<IUIOptionGroupOptionConfiguration[]> = new EventEmitter<IUIOptionGroupOptionConfiguration[]>();\n  \n  public isEmpty: boolean = false;\n  private _multiOptionsSelected: IUIOptionGroupOptionConfiguration[] = []\n  private _optionSelected: Partial<IUIOptionGroupOptionConfiguration> = {}\n\n  public trackByOptionId(\n    index: number, \n    option: IUIOptionGroupOptionConfiguration\n  ): number | string {\n    return option.id;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['options'] && (changes['options'].previousValue !== changes['options'].currentValue)) {\n      this.isEmpty = this.options.length > 0 ? false : true;\n    }\n  }\n\n  public onSendOptionSelected(option: IUIOptionGroupOptionConfiguration) {\n    if (this.config && this.config.multiSelected === true) {\n      if (this.verifyDuplicateOptionSelected(option)) {\n        this._multiOptionsSelected =  this._multiOptionsSelected.filter(({id}: IUIOptionGroupOptionConfiguration) => option.id !== id);\n        this.outputMultiSelected.emit(this._multiOptionsSelected);\n        return;\n      }\n\n      this._multiOptionsSelected.push(option);\n      this.outputMultiSelected.emit(this._multiOptionsSelected);\n    } else {\n      if (this._optionSelected.id === option.id) {\n        this._optionSelected = {};\n      } else {\n        Object.assign(this._optionSelected, option)\n      }\n\n      this.outputSelected.emit(\n        this._optionSelected as IUIOptionGroupOptionConfiguration\n      );\n    }\n  }\n\n  public verifyThisElementIsSelected(option: IUIOptionGroupOptionConfiguration) {\n    if (this.config && this.config.multiSelected) {\n      if(this.verifyDuplicateOptionSelected(option)) {\n        return true;\n      }\n    }else {\n      if (this._optionSelected.id === option.id) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private verifyDuplicateOptionSelected(\n      option: IUIOptionGroupOptionConfiguration\n  ): IUIOptionGroupOptionConfiguration | undefined {\n    return this._multiOptionsSelected.find(\n      ({ id, value }: IUIOptionGroupOptionConfiguration) => {\n        return id === option.id && value === option.value;\n      }\n    );\n  }\n\n}\n","<ng-container *ngIf=\"options\">\n    <ul role=\"listbox\">\n        <ng-container *ngIf=\"isEmpty; then emptyData;\"></ng-container>\n        <li *ngFor=\"let option of options; trackBy: trackByOptionId\">\n            <ui-option\n                [title]=\"option.value\" \n                [isActive]=\"verifyThisElementIsSelected(option)\"\n                [isDisabled]=\"option.disabled\"\n                (outputemit)=\"onSendOptionSelected(option)\" \n            />\n        </li>\n    </ul>\n</ng-container>\n\n\n<ng-template #emptyData>\n    <li>Empty Data</li>\n</ng-template>","import { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ui-checkbox',\n  standalone: true,\n  imports: [\n    FormsModule\n  ],\n  templateUrl: './checkbox.component.html',\n  styleUrl: './checkbox.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => UICheckboxComponent),\n      multi: true\n    }\n  ]\n\n})\nexport class UICheckboxComponent implements ControlValueAccessor {\n\n  @Input() id!: string;\n  @Input() name!: string;\n  @Input() label!: string;\n  @Input() ariaLabel!: string\n  @Input() \n  set isChecked(value: boolean) {\n    this.isCheckated = value;\n  };\n  @Input() isDisabled!: boolean;\n\n  @Output() outputChecked: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public isCheckated!: boolean;\n  public tabIndex: number = 0;\n  public onChangeCallback?: (checked: boolean) => void;\n  public onTouch = () => {};\n\n  writeValue(checked: boolean): void {\n    this.isChecked = checked;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n  \n  modelChangeFn(checked: boolean) {\n    this.onChangeCallback?.(checked);\n    this.outputChecked.emit(checked);\n  }\n\n}\n","<div class=\"ui-checkbox\">\n    <input \n        [id]=\"id\" \n        class=\"ui-checkbox-input\" \n        type=\"checkbox\" \n        role=\"checkbox\"\n        [attr.aria-disabled]=\"isDisabled\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.aria-checked]=\"isCheckated\"\n        [checked]=\"isCheckated\" \n        [disabled]=\"isDisabled\"\n        [tabIndex]=\"isDisabled ? -1 : tabIndex\"\n        [(ngModel)]=\"isCheckated\"\n        (ngModelChange)=\"modelChangeFn($event)\"\n    />\n    <label \n        class=\"ui-checkbox-label\" \n        [class.ui-checkbox-label--not-text]=\"!label\" \n        [for]=\"id\">\n        <svg viewBox=\"0 0 100 100\">\n            <path fill=\"none\" stroke=\"#000\" stroke-width=\"13\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                stroke-miterlimit=\"10\" d=\"M12.1 52.1l24.4 24.4 53-53\" />\n        </svg>\n        {{ label }}\n    </label>\n</div>","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\n\n\nexport interface ITreeViewConfiguration {\n  withCheckbox?: boolean,\n  withSelected?: boolean\n}\n\nexport interface ITreeViewSelected {\n  parent?: ITreeView | null;\n  selected: ITreeView;\n}\n\nexport interface ITreeView {\n  id: string;\n  label: string;\n  children?: ITreeView[]\n}\n\n@Component({\n  selector: 'ui-tree-view',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './tree-view.component.html',\n  styleUrl: './tree-view.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class UITreeViewComponent implements OnInit, AfterViewInit {\n\n  @ViewChildren('item') item!: QueryList<ElementRef>;\n\n  @Input() config!: ITreeViewConfiguration;\n  @Input() items: ITreeView[] = [\n    {\n      id: '1',\n      label: 'Frutas',\n      children: [\n        {\n          id: '2',\n          label: 'Tropicales',\n          children: [\n            {\n             id: '3',\n             label: 'PiÃ±a'\n            },\n            {\n              id: '3',\n              label: 'Melocoton'\n             },\n          ]\n        },\n        {\n          id: '4',\n          label: 'Nacionales',\n          children: [\n            {\n             id: '5',\n             label: 'Naranjas'\n            },\n            {\n              id: '6',\n              label: 'Sandias'\n            },\n          ]\n        },\n      ]\n    },\n  ]\n  @Output() outputSelectItem: EventEmitter<ITreeView> = new EventEmitter<ITreeView>();\n\n  public itemSelected: ITreeViewSelected[] = [];\n  public withItemsSelected: boolean = false;\n\n  constructor(\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n    if(this.config) {\n      this.withItemsSelected = (\n        this.config.withSelected ? \n        true : \n        false\n      );\n    }\n\n    console.log(this.withItemsSelected)\n  }\n\n  ngAfterViewInit(): void {\n    this.item.forEach((i) => {\n      //console.log(i.nativeElement)\n    });\n  }\n\n  public selectItem(node: ITreeView) {\n    this.outputSelectItem.emit(node);\n  }\n\n  public isExpanded(node: ITreeView): void {\n    console.log(node);\n    this.findNode(node);\n    this.cdr.markForCheck();\n  }\n\n  public isNodeSelected(idNode: string): ITreeViewSelected | undefined {\n    return this.itemSelected.find(\n      (node: ITreeViewSelected) => node.selected.id === idNode\n    );\n  }\n\n  /**\n   * \n   * @return ITreeViewSelected\n  */\n\n  private findNode(node: ITreeView) {\n    const visited = new Set<string>();\n\n    for (const currentNode of this.items) {\n      if (this.processNode(node, currentNode, visited)) {\n        break;\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  private processNode(\n    node: ITreeView,\n    currentNode: ITreeView,\n    visited: Set<string>\n  ): boolean {\n\n\n\n    if (visited.has(currentNode.id)) {\n      return false;\n    }\n\n    visited.add(currentNode.id);\n\n    if (currentNode.id === node.id) {\n      if (\n        this.verifyThisExistElementSelected(currentNode.id)\n      ) {\n        console.log('Repeat Element')\n        this.deletedNode(currentNode.id);\n      } else {\n        if (!this.itemSelected) {\n          this.itemSelected = [{ selected: currentNode }];\n        } else {\n          this.itemSelected.push({ selected: currentNode });\n        }\n      }\n\n      this.cdr.markForCheck();\n      return true;\n\n    }\n\n    // Process Childrens\n    if (currentNode.children) {\n      for (const child of currentNode.children) {\n        console.log(child)\n        if (this.processNode(node, child, visited)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private verifyThisExistElementSelected(\n    nodeId: string\n  ) {\n    return !!this.itemSelected.find(\n      (node: ITreeViewSelected) => node.selected.id === nodeId\n    );\n  }\n\n  private verifyParent(node: ITreeView): void {\n\n  }\n\n  private deletedNode(nodeId: String): void {\n    this.itemSelected = this.itemSelected?.filter(\n      (node: ITreeViewSelected) => node.selected.id !== nodeId\n    );\n\n    this.cdr.detectChanges();\n  }\n}\n","<ul class=\"ui-tree-view\">\n        <li \n        *ngFor=\"let item of items\"\n        #item \n        class=\"ui-tree-view-item\"\n        [class.ui-tree-view-item--expanded]=\"isNodeSelected(item.id)\" \n        [class.ui-tree-view-item--child]=\"!item.children\"\n        >\n        <p class=\"ui-tree-view-item-group\">\n            <button \n                *ngIf=\"item.children\" \n                class=\"ui-tree-view-item-btn\" \n                type=\"button\"\n                [attr.aria-label]=\"item.label\"\n                (click)=\"isExpanded(item)\">\n                <svg \n                    aria-hidden=\"true\" \n                    width=\"16\" \n                    height=\"16\" \n                    viewBox=\"0 0 16 16\" \n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    class=\"ui-tree-view-icon\"\n                    [class.ui-tree-view-icon--rotate]=\"isNodeSelected(item.id)\">\n                    <path\n                        d=\"M4.74666 14.08C5.07333 14.4067 5.6 14.4067 5.92666 14.08L11.5333 8.47333C11.5951 8.41165 11.6442 8.33839 11.6776 8.25774C11.7111 8.17709 11.7283 8.09064 11.7283 8.00333C11.7283 7.91601 11.7111 7.82956 11.6776 7.74891C11.6442 7.66826 11.5951 7.595 11.5333 7.53333L5.92 1.91999C5.6 1.59999 5.06666 1.59999 4.74666 1.91999C4.66906 1.9974 4.60749 2.08936 4.56548 2.1906C4.52347 2.29185 4.50184 2.40038 4.50184 2.50999C4.50184 2.6196 4.52347 2.72814 4.56548 2.82938C4.60749 2.93062 4.66906 3.02258 4.74666 3.09999L9.64 7.99999L4.74 12.9C4.42 13.2267 4.42 13.7533 4.74666 14.08Z\"\n                        fill=\"#9D3FE7\" />\n                </svg>\n            </button>\n            <span *ngIf=\"item.children\">\n                {{ item.label }}\n            </span>\n            <button \n                *ngIf=\"!item.children && withItemsSelected\" \n                class=\"ui-tree-view-item-select\"\n                [attr.aria-label]=\"item.label\"\n                (click)=\"selectItem(item)\">\n                {{ item.label }}\n            </button>\n            <span >\n                \n            </span>\n        </p>\n        <ui-tree-view\n            *ngIf=\"item.children && isNodeSelected(item.id)\"\n            [class.ui-tree-view--collapse]=\"!isNodeSelected(item.id)\"\n            [config]=\"config\"\n            [items]=\"item.children\"\n            (outputSelectItem)=\"selectItem($event)\"\n        />\n    </li>\n</ul>","/*\n * Public API Surface of manjon-ui\n */\n\n// Radiobutton\nexport * from './lib/components/radiobutton/radiobutton.component';\n\n//Toggler\nexport * from './lib/components/toggler/toggler.component';\n\n//Input Search\nexport * from './lib/components/input-search/input-search.component';\n\n// Option Group\nexport * from './lib/components/option-group/option-group.component';\n\n// Option\nexport * from './lib/components/input-search/option/option.component';\n\n// Checkbox\nexport * from './lib/components/checkbox/checkbox.component';\n\n// TreeView\nexport * from './lib/components/tree-view/tree-view.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}