@use '../../../styles/index.scss' as mixin;

:root {
  --ui-radiobutton-border-default: var(
    --ui-custom-radiobutton-border-default,
    var(--grayscale-spacer)
  );
  --ui-radiobutton-border-focus: var(
    --ui-custom-radiobutton-border-focus,
    var(--grayscale-black)
  );
  --ui-radiobutton-border-checked: var(
    --ui-custom-radiobutton-border-checked,
    var(--corporate-purple)
  );
  --ui-radiobutton-border-error: var(
    --ui-custom-radiobutton-border-error,
    var(--informing-error)
  );
  --ui-radiobutton-shadow-bg-default: var(
    --ui-custom-radiobutton-shadow-bg-default,
    transparent
  );
  --ui-radiobutton-shadow-bg-checked: var(
    --ui-custom-radiobutton-shadow-bg-checked,
    var(--corporate-purple)
  );
  --ui-radiobutton-shadow-bg-error: var(
    --ui-custom-radiobutton-shadow-bg-error,
    var(--informing-error)
  );
  --ui-radiobutton-shadow-bg-disabled: var(
    --ui-custom-radiobutton-shadow-bg-disabled,
    transparent
  );
  --ui-radiobutton-shadow-width-default: var(
    --ui-custom-radiobutton-shadow-width-default,
    #{mixin.em(0px)}
  );
  --ui-radiobutton-shadow-width-checked: var(
    --ui-custom-radiobutton-shadow-width-checked,
    #{mixin.em(4px)}
  );
}

.ui-radiobutton {
  --radiobutton-bg: var(--ui-radiobutton-shadow-bg-default);
  --radiobutton-border: var(--ui-radiobutton-border-default);
  --radiobutton-shadow: var(--ui-radiobutton-shadow-bg-default);
  --radiobutton-shadow-width: var(--ui-radiobutton-shadow-width-default);

  font-family: var(--font-family);

  &-input {
    @include mixin.hidden;
    &:focus {
      & + label {
        &::before {
          --radiobutton-border: var(--ui-radiobutton-border-focus);
        }
      }
    }
    &:checked {
      &:not([aria-invalid="true"]) {
        & + label {
          &::before {
            --radiobutton-shadow: var(--grayscale-white);
            --radiobutton-shadow-width: var(
              --ui-radiobutton-shadow-width-checked
            );
            --radiobutton-bg: var(--ui-radiobutton-shadow-bg-checked);
            --radiobutton-border: var(--ui-radiobutton-border-checked);
          }
        }
      }
    }
    &[aria-invalid="true"] {
      &:checked {
        & + label {
          --radiobutton-shadow: var(--grayscale-white);
          --radiobutton-bg: var(--ui-radiobutton-shadow-bg-error);
          --radiobutton-shadow-width: var(--ui-radiobutton-shadow-width-checked);
        }
      }
      & + label {
        &::before {
          --radiobutton-border: var(--ui-radiobutton-border-error);
        }
      }
    }
  }

  &-label {
    position: relative;
    padding-left: calc(mixin.em(18px) + (mixin.em(12px) / 2));
    font-weight: 400;
    font-size: mixin.em(16px);
    line-height: 148%;
    color: var(--grayscale-black);

    &::before {
      content: "";
      width: mixin.em(18px);
      height: mixin.em(18px);
      border: 1px solid var(--radiobutton-border, var(--grayscale-spacer));
      border-radius: 999px;
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      margin-top: mixin.em(2px);
      transition: background ease-in-out 0.25s;
      background-color: var(--radiobutton-bg);
      box-shadow: inset 0 0 0 var(--radiobutton-shadow-width)
        var(--radiobutton-shadow, transparent);
    }
  }
}
